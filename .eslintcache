[{"C:\\Users\\tomaz\\personal\\src\\index.js":"1","C:\\Users\\tomaz\\personal\\src\\App.js":"2","C:\\Users\\tomaz\\personal\\src\\reportWebVitals.js":"3","C:\\Users\\tomaz\\personal\\src\\config\\history.js":"4","C:\\Users\\tomaz\\personal\\src\\assets\\styles\\globalStyles.js":"5","C:\\Users\\tomaz\\personal\\src\\util\\index.js":"6","C:\\Users\\tomaz\\personal\\src\\components\\home.js":"7","C:\\Users\\tomaz\\personal\\src\\components\\layout\\layout.js":"8","C:\\Users\\tomaz\\personal\\src\\components\\banneritems.js":"9","C:\\Users\\tomaz\\personal\\src\\components\\trade.js":"10","C:\\Users\\tomaz\\personal\\src\\util\\objeto.js":"11","C:\\Users\\tomaz\\personal\\src\\config\\http.js":"12","C:\\Users\\tomaz\\personal\\src\\util\\functioncallput.js":"13","C:\\Users\\tomaz\\personal\\src\\components\\allOpcoes.js":"14","C:\\Users\\tomaz\\personal\\src\\components\\destaques.js":"15","C:\\Users\\tomaz\\personal\\src\\components\\linksgroup.js":"16","C:\\Users\\tomaz\\personal\\src\\components\\topButton.js":"17","C:\\Users\\tomaz\\personal\\src\\util\\formatingnumbers.js":"18","C:\\Users\\tomaz\\personal\\src\\components\\tabelasdestaques.js":"19","C:\\Users\\tomaz\\personal\\src\\components\\comparador.js":"20","C:\\Users\\tomaz\\personal\\src\\components\\calculadora.js":"21","C:\\Users\\tomaz\\personal\\src\\util\\savelocalCalc.js":"22","C:\\Users\\tomaz\\personal\\src\\util\\dadosUteis.js":"23","C:\\Users\\tomaz\\personal\\src\\components\\quadro.js":"24","C:\\Users\\tomaz\\personal\\src\\components\\pvg.js":"25","C:\\Users\\tomaz\\personal\\src\\util\\localsthandler.js":"26","C:\\Users\\tomaz\\react-project\\src\\index.js":"27","C:\\Users\\tomaz\\react-project\\src\\reportWebVitals.js":"28","C:\\Users\\tomaz\\react-project\\src\\App.js":"29","C:\\Users\\tomaz\\react-project\\src\\assets\\styles\\globalStyles.js":"30","C:\\Users\\tomaz\\react-project\\src\\components\\dog.js":"31","C:\\Users\\tomaz\\react-project\\src\\components\\home.js":"32","C:\\Users\\tomaz\\react-project\\src\\components\\glass.js":"33","C:\\Users\\tomaz\\react-project\\src\\components\\tenis.js":"34","C:\\Users\\tomaz\\react-project\\src\\components\\excelrender.js":"35","C:\\Users\\tomaz\\react-project\\src\\components\\smooth.js":"36","C:\\Users\\tomaz\\react-project\\src\\components\\movingbg.js":"37","C:\\Users\\tomaz\\react-project\\src\\components\\navbars.js":"38","C:\\Users\\tomaz\\react-project\\src\\components\\menuAnimado.js":"39","C:\\Users\\tomaz\\react-project\\src\\components\\paralax.js":"40","C:\\Users\\tomaz\\react-project\\src\\config\\history.js":"41","C:\\Users\\tomaz\\react-project\\src\\util\\dadosUteis.js":"42","C:\\Users\\tomaz\\react-project\\src\\util\\localsthandler.js":"43","C:\\Users\\tomaz\\react-project\\src\\util\\savelocalCalc.js":"44","C:\\Users\\tomaz\\react-project\\src\\components\\layout\\layout.js":"45","C:\\Users\\tomaz\\react-project\\src\\components\\topButton.js":"46","C:\\Users\\tomaz\\react-project\\src\\util\\objeto.js":"47","C:\\Users\\tomaz\\react-project\\src\\components\\banneritems.js":"48","C:\\Users\\tomaz\\react-project\\src\\components\\linksgroup.js":"49","C:\\Users\\tomaz\\react-project\\src\\services\\trader.js":"50","C:\\Users\\tomaz\\react-project\\src\\components\\formcontact.js":"51","C:\\Users\\tomaz\\react-project\\src\\util\\functioncallput.js":"52","C:\\Users\\tomaz\\react-project\\src\\util\\index.js":"53","C:\\Users\\tomaz\\react-project\\src\\config\\http.js":"54"},{"size":578,"mtime":1611749962862,"results":"55","hashOfConfig":"56"},{"size":2378,"mtime":1625651177066,"results":"57","hashOfConfig":"56"},{"size":362,"mtime":499162500000,"results":"58","hashOfConfig":"56"},{"size":113,"mtime":1611743684558,"results":"59","hashOfConfig":"56"},{"size":858,"mtime":1623160065077,"results":"60","hashOfConfig":"56"},{"size":710,"mtime":1613169989791,"results":"61","hashOfConfig":"56"},{"size":1959,"mtime":1625651106887,"results":"62","hashOfConfig":"56"},{"size":3079,"mtime":1624387528636,"results":"63","hashOfConfig":"56"},{"size":2736,"mtime":1614370512205,"results":"64","hashOfConfig":"56"},{"size":25853,"mtime":1625574834234,"results":"65","hashOfConfig":"56"},{"size":1572,"mtime":1621101796457,"results":"66","hashOfConfig":"56"},{"size":1294,"mtime":1625494920081,"results":"67","hashOfConfig":"56"},{"size":363,"mtime":1616440686569,"results":"68","hashOfConfig":"56"},{"size":14168,"mtime":1625574775331,"results":"69","hashOfConfig":"56"},{"size":29716,"mtime":1625574813232,"results":"70","hashOfConfig":"56"},{"size":2510,"mtime":1625508328194,"results":"71","hashOfConfig":"56"},{"size":3498,"mtime":1616768647004,"results":"72","hashOfConfig":"56"},{"size":518,"mtime":1621252745256,"results":"73","hashOfConfig":"56"},{"size":366,"mtime":1617925578691,"results":"74","hashOfConfig":"56"},{"size":6141,"mtime":1625575036658,"results":"75","hashOfConfig":"56"},{"size":18640,"mtime":1625574757717,"results":"76","hashOfConfig":"56"},{"size":138,"mtime":1618922990794,"results":"77","hashOfConfig":"56"},{"size":525,"mtime":1618932588791,"results":"78","hashOfConfig":"56"},{"size":9959,"mtime":1625574854903,"results":"79","hashOfConfig":"56"},{"size":6022,"mtime":1625574847736,"results":"80","hashOfConfig":"56"},{"size":999,"mtime":1625575426471,"results":"81","hashOfConfig":"56"},{"size":578,"mtime":1651961210521,"results":"82","hashOfConfig":"83"},{"size":362,"mtime":1651961210566,"results":"84","hashOfConfig":"83"},{"size":1366,"mtime":1651962637303,"results":"85","hashOfConfig":"83"},{"size":811,"mtime":1651961213445,"results":"86","hashOfConfig":"83"},{"size":3348,"mtime":1651961213612,"results":"87","hashOfConfig":"83"},{"size":1905,"mtime":1651961213715,"results":"88","hashOfConfig":"83"},{"size":3140,"mtime":1651961213653,"results":"89","hashOfConfig":"83"},{"size":2978,"mtime":1651961214117,"results":"90","hashOfConfig":"83"},{"size":5011,"mtime":1651961213620,"results":"91","hashOfConfig":"83"},{"size":5061,"mtime":1651961214034,"results":"92","hashOfConfig":"83"},{"size":2186,"mtime":1651961213831,"results":"93","hashOfConfig":"83"},{"size":8063,"mtime":1651961213957,"results":"94","hashOfConfig":"83"},{"size":14763,"mtime":1651961213735,"results":"95","hashOfConfig":"83"},{"size":1964,"mtime":1651961213966,"results":"96","hashOfConfig":"83"},{"size":110,"mtime":1651961214367,"results":"97","hashOfConfig":"83"},{"size":519,"mtime":1651961214735,"results":"98","hashOfConfig":"83"},{"size":962,"mtime":1651961215037,"results":"99","hashOfConfig":"83"},{"size":134,"mtime":1651961215055,"results":"100","hashOfConfig":"83"},{"size":2587,"mtime":1651962694190,"results":"101","hashOfConfig":"83"},{"size":3382,"mtime":1651961214332,"results":"102","hashOfConfig":"83"},{"size":1501,"mtime":1651961215046,"results":"103","hashOfConfig":"83"},{"size":2640,"mtime":1651961213467,"results":"104","hashOfConfig":"83"},{"size":2447,"mtime":1651961213726,"results":"105","hashOfConfig":"83"},{"size":46,"mtime":1651962544963,"results":"106","hashOfConfig":"83"},{"size":1302,"mtime":1651961213631,"results":"107","hashOfConfig":"83"},{"size":345,"mtime":1651961214878,"results":"108","hashOfConfig":"83"},{"size":695,"mtime":1651961215028,"results":"109","hashOfConfig":"83"},{"size":1239,"mtime":1651961214376,"results":"110","hashOfConfig":"83"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1f2frso",{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"119"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"119"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"119"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"119"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"119"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"119"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"119"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"119"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"119"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"119"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"119"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"119"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14g9kkn",{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\tomaz\\personal\\src\\index.js",[],"C:\\Users\\tomaz\\personal\\src\\App.js",[],"C:\\Users\\tomaz\\personal\\src\\reportWebVitals.js",[],"C:\\Users\\tomaz\\personal\\src\\config\\history.js",[],["233","234"],"C:\\Users\\tomaz\\personal\\src\\assets\\styles\\globalStyles.js",["235"],"C:\\Users\\tomaz\\personal\\src\\util\\index.js",[],"C:\\Users\\tomaz\\personal\\src\\components\\home.js",[],"C:\\Users\\tomaz\\personal\\src\\components\\layout\\layout.js",["236","237","238","239"],"import React from 'react'\r\nimport { Button,Dropdown,  Row, Col, Container, Nav, Navbar } from 'react-bootstrap'\r\nimport styled from 'styled-components'\r\nimport history from '../../config/history';\r\nimport Pvgalert from '../pvg';\r\n\r\nconst Layout = ({ children, ...props }) => {\r\n\r\n    const linkes = [\r\n        { path: \"/alloptions\", label: \"Opções\" },\r\n        { path: \"/grafico\", label: \"Gráfico\" },\r\n        { path: \"/trade\", label: \"Análises\" },\r\n        { path: \"/tabelasdestaques\", label: \"Destaques\" },\r\n        { path: \"/comparador\", label: \"Comparador\" },\r\n        { path: \"/calculadora\", label: \"Calculadora\" },\r\n        { path: \"/quadro\", label: \"Quadro\" }]\r\n\r\n\r\n    function negrito(arrayStrings, ...valores) {\r\n        //https://www.alura.com.br/artigos/tagged-template-literals\r\n        return arrayStrings.reduce((acumulador, string, i) => {\r\n            return `${acumulador}${string}${valores[i] ? `<strong>${valores[i]}</strong>` : ''}`;\r\n        }, '');\r\n    }\r\n\r\n    function CollapseNavbarBootstrap() {\r\n        return (\r\n            <Navbar collapseOnSelect expand=\"lg\" className='red' variant=\"light\">\r\n                <Container>\r\n                    <Navbar.Brand >{props.header ? props.header : \"Props header\"}</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                        <Nav className=\"ml-auto\">\r\n\r\n                            {linkes.map((item, i) => (\r\n                                <Dropdown.Item eventKey={i} onClick={() => history.push(item.path)} >   {item.label}  </Dropdown.Item>\r\n                            )\r\n                            )}\r\n\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n\r\n            <StHeader className=\"fixed-top\">\r\n                <Container fluid>\r\n                    <Pvgalert />\r\n                    <CollapseNavbarBootstrap />\r\n                </Container>\r\n            </StHeader>\r\n\r\n            <br /><br /><br /><br />\r\n            {children}\r\n\r\n            <StFooter>\r\n                <h1 >{props.footer ? props.footer : \"Props Footer\"}</h1>\r\n            </StFooter>\r\n\r\n        </>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Layout\r\n\r\n\r\n\r\nconst StHeader = styled.header`\r\nmin-height: 70px;\r\nbackground-color:#11999e;\r\ncolor: #40514e;\r\nmargin-bottom: 120px;\r\ndisplay:flex;\r\nalign-items:center;\r\njustify-content:center;\r\n\r\n.navbar-brand{\r\n    color: #40514e!important;\r\n\r\n}\r\n\r\n.btn{\r\n    margin: 10px 1px auto 1px;\r\n    /* min-width: 100px; */\r\n    /* height: 50%; */\r\n    border-top-left-radius: 9999px;\r\n    border-top-right-radius: 9999px;\r\n    border-bottom-right-radius: 9999px;\r\n    border-bottom-left-radius: 9999px;\r\n}\r\nh1, h3{\r\n    margin-right : auto;\r\n    margin-left : 50%;\r\n}\r\n`\r\n\r\nconst StFooter = styled.footer`\r\nheight: 100px;\r\nbackground-color:#40514e;\r\ncolor: #30e3ca;\r\nfont-size:120px;\r\ndisplay:flex;\r\nalign-items:center;\r\njustify-content:center;\r\n`","C:\\Users\\tomaz\\personal\\src\\components\\banneritems.js",["240","241"],"\r\nimport React, { useEffect } from 'react'\r\nimport { Carousel, Col, Container, Row } from 'react-bootstrap'\r\nimport styled from 'styled-components'\r\n\r\n\r\n\r\n\r\n//TODO: o professor colocou outro modelo de banner customizado\r\n/**BannerHome, vou colocar no carrousel os produtos que estão em highlight/destaque */\r\nconst BannerHome = () => {\r\n\r\n\r\n    const bannerItens_redux = [\r\n        \"https://www.youtube.com/embed/BsTKPPImLWY?controls=0\",\r\n        \"https://www.youtube.com/embed/t4ClFb29Z6k?controls=0\",\r\n        \"https://www.youtube.com/embed/ARykFaYlCD8?controls=0\",\r\n        \"https://www.youtube.com/embed/7Me2vVKJrRA?controls=0\"]\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <Row >\r\n                <ColBgDark >\r\n                    <div >\r\n                        <Banner hidden={false} >\r\n                            <Carousel>\r\n\r\n                                {bannerItens_redux.map((item, i) => (\r\n\r\n                                    <Carousel.Item>\r\n                                        \r\n\r\n                                        <iframe\r\n                                            width=\"760\"\r\n                                            height=\"515\"\r\n                                            src={item}\r\n                                            frameborder=\"0\"\r\n                                            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                                            allowfullscreen>\r\n                                        </iframe>\r\n                                        {/*                     \r\n                                        <Carousel.Caption >\r\n                                            <h3>{item.title}</h3>\r\n                                            <p>{item.coment}</p>\r\n                                        </Carousel.Caption> */}\r\n                                    </Carousel.Item>\r\n                                )\r\n                                )}\r\n                            </Carousel>\r\n                        </Banner>\r\n\r\n                    </div>\r\n                </ColBgDark>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default BannerHome\r\n\r\n\r\nconst ColBgDark = styled(Col)`\r\n    background-color: rgba(10,10,10,0.7);\r\n`\r\n\r\n\r\n\r\nconst Banner = styled.div`\r\n    margin-top : 5px;\r\n    margin-bottom : 40px;\r\n    /* width:100%; */\r\n    color: white;\r\n    text-align:center;\r\n    /* background-color: rgba(10,10,10,0.7); */\r\n    h3{\r\n        margin-top : 45px;\r\n    }\r\n\r\n    img {\r\n        max-height : 500px;\r\n    }\r\n\r\n    .carousel-indicators li {\r\n        height: 10px;\r\n        \r\n    }\r\n\r\n    .carousel-indicators {\r\n        bottom: -50px;\r\n    }\r\n`\r\n","C:\\Users\\tomaz\\personal\\src\\components\\trade.js",["242","243","244","245"],"import React, { useState, useEffect } from 'react'\r\nimport { Col, Modal, Row, Container, Table, Button, Form, Spinner, OverlayTrigger, Tooltip } from 'react-bootstrap'\r\nimport styled from 'styled-components'\r\nimport { getFullData, getOpcoesDe, getCalocOneOpcao } from '../services/trader'\r\nimport optTipo from '../util/functioncallput'\r\nimport { acao } from '../util/objeto'\r\nimport { useParams } from 'react-router-dom'\r\nimport history from '../config/history';\r\nimport LinksGroup from './linksgroup'\r\nimport ToTopButton from './topButton'\r\nimport Layout from './layout/layout'\r\nimport { isBuy, TDisbuy } from './allOpcoes'\r\n\r\nconst Trade = () => {\r\n\r\n    const { paper } = useParams()\r\n    const [ticker, setTicker] = useState(paper || \"\")\r\n    const [fullData, setFullData] = useState(acao)\r\n\r\n    const [allOptionsDe, setallOptionsDe] = useState([{}])\r\n    const [savedcalc, setsavedcalc] = useState([])\r\n\r\n    const [calculando, setcalculando] = useState(false);\r\n    const [show, setShow] = useState(false);\r\n    const [modalText, setmodalText] = useState(<div></div>);\r\n\r\n    const handleClose = () => {\r\n        setShow(false)\r\n        setcalculando(false)\r\n    };\r\n    const handleShow = () => setShow(true);\r\n\r\n\r\n    const handleChange = (attr) => {\r\n        const { value } = attr.target\r\n        setTicker(value.toUpperCase())\r\n    }\r\n\r\n\r\n    const calculaUmaOpcao = async (cotacaoE, ticker, ativoTicker, strike, tipo) => {\r\n        \r\n\r\n        var cotacao\r\n        let newCotacao = prompt(`Cotação do ativo para simular cálculo de ${ticker}:`, cotacaoE);\r\n\r\n\r\n\r\n         \r\n        if (newCotacao == null || newCotacao == \"\") {\r\n            return\r\n        } else {\r\n            cotacao = newCotacao;\r\n        }\r\n        newCotacao = newCotacao.replace(\",\", \".\")\r\n        let message = \"\"\r\n        if (tipo === \"CALL\") {\r\n            if (strike > cotacao) {\r\n                message = \"CALL: O strike da opção proposta é MAIOR que o target da simulação \"\r\n            }\r\n        } else {\r\n            if (strike < cotacao) {\r\n                message = \"PUT: O strike da opção proposta é MENOR que o target da simulação \"\r\n            }\r\n        }\r\n\r\n        const cotacaoBase = cotacaoE\r\n        const fechamentoAnterior = fullData.radarRealtime.fechamentoAnterior\r\n        const kueri = { cotacao, ticker, ativoTicker, strike, cotacaoBase, fechamentoAnterior }\r\n        setcalculando(true)\r\n        const result = await getCalocOneOpcao(kueri)\r\n\r\n        const mostraresult =\r\n            <>\r\n                <div>{ticker}:</div>\r\n                <div>Simulado em R$ {cotacao} = R$  {result.data.premioOpcao.toFixed(2)}.</div>\r\n\r\n                <div>Cotação Agora*: R$ {cotacaoBase} =  R$ {result.data.premioBase.toFixed(2)}. </div>\r\n\r\n                {message ? <h1> {message} </h1> : \"\"}\r\n            </>\r\n\r\n        setmodalText(mostraresult)\r\n      \r\n        savedcalc.push({\r\n            ticker,\r\n            tipo,\r\n            cotacaoBase: cotacaoE,\r\n            premioBase: result.data.premioBase,\r\n            cotacao: result.data.cotacaoReplaced,\r\n            premio: result.data.premioOpcao,\r\n            strike: result.data.strike_replaced,\r\n            data: result.data.data\r\n        })\r\n\r\n        handleShow()\r\n        saveToLocal(\"CALCULADOS\", savedcalc)\r\n\r\n    }\r\n\r\n    const saveToLocal = (item, object) => {\r\n\r\n        const jsonObj = JSON.stringify(object);\r\n        localStorage.setItem(item, jsonObj);\r\n    }\r\n\r\n    const limparHistoricodeCalculados = () => {\r\n        localStorage.setItem(\"CALCULADOS\", JSON.stringify([]));\r\n        loadIfLocal()\r\n    }\r\n\r\n    const loadIfLocal = () => {\r\n        \r\n        let str = localStorage.getItem(\"CALCULADOS\");\r\n\r\n        if (!str) {\r\n            localStorage.setItem(\"CALCULADOS\", JSON.stringify([]));\r\n            str = localStorage.getItem(\"CALCULADOS\");\r\n        }\r\n\r\n        const parsedObj = JSON.parse(str)\r\n        setsavedcalc(parsedObj)\r\n    }\r\n\r\n    const PegaTodosRealtime = async () => {\r\n        \r\n        await getFullData({ TICKER: ticker.toUpperCase() })\r\n            .then((res) => setFullData(res.data))\r\n            .catch(res => alert('Erro em busca fulldata' + res))\r\n        \r\n        await getOpcoesDe({ acao: ticker.toUpperCase() })\r\n            .then((res) => {\r\n\r\n                \r\n                res.data = res.data.sort(function (a, b) {\r\n                    if (a.strike > b.strike) {\r\n                        return 1;\r\n                    }\r\n                    if (a.strike < b.strike) {\r\n                        return -1;\r\n                    }\r\n                    return 0;\r\n                })\r\n                setallOptionsDe(res.data)\r\n            })\r\n\r\n\r\n            .catch(res => alert('Erro em busca allOptionsDe' + res))\r\n\r\n    }\r\n    /**Retorna o p´roximo múltiplo de 100 do lote ótimo */\r\n    function loteOtimo(dinheiro, premio) {\r\n        return Math.ceil((dinheiro / premio) / 100) * 100\r\n    }\r\n    useEffect(\r\n        () => {\r\n            loadIfLocal()\r\n            if (paper) {\r\n                PegaTodosRealtime()\r\n            }\r\n        }, [])\r\n\r\n\r\n    const MyModal = () => {\r\n        return (\r\n            <>\r\n\r\n\r\n                <Modal show={show} onHide={handleClose} animation={false}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Resultado do cálculo.</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body  >\r\n                        <p>\r\n                            {modalText}\r\n                        </p>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                            Close\r\n                  </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n\r\n    const RadarRealtime = () => {\r\n        return (\r\n            <>\r\n                <h4 >FAST DATA - {fullData.fundamentos.TICKER} (dados de checkmm9, delayed)</h4>\r\n                <Table striped bordered hover >\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Cotação</th>\r\n                            <th>Delta Preço</th>\r\n                            <th>Delta Vol </th>\r\n                            <th>DY Agora</th>\r\n                            <th>$/MM9</th>\r\n                            <th>$/MM20</th>\r\n                            <th>$/MM45</th>\r\n                            <th>Data Report</th>\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td> {fullData.radarRealtime.qotacao}</td>\r\n                            <td> {fullData.radarRealtime.deltaPreco}</td>\r\n                            <td> {fullData.radarRealtime.deltaVol}</td>\r\n                            <td>{fullData.radarRealtime.dyNow}</td>\r\n                            <td>{fullData.radarRealtime.atualPorMM9}</td>\r\n                            <td>{fullData.radarRealtime.atualPorMM20}</td>\r\n                            <td>{fullData.radarRealtime.atualPorMM45}</td>\r\n                            <td>{fullData.radarRealtime.dataPesquisa}</td>\r\n                        </tr>\r\n\r\n\r\n                    </tbody>\r\n                </Table>\r\n                <br /><br /><br />\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    const Yahoofinance = () => {\r\n        return (\r\n            <>\r\n                <h4>DADOS D - 1 - {fullData.fundamentos.TICKER}</h4>\r\n                <Table striped bordered hover >\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Abertura</th>\r\n                            <th>Máxima</th>\r\n                            <th>Mínima </th>\r\n                            <th>Fechamento</th>\r\n                            <th>Vol Médio Dia</th>\r\n                            <th>Data Report</th>\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            v                            <td> {fullData.yahoofinance.Abrir}</td>\r\n                            <td> {fullData.yahoofinance.Alto}</td>\r\n                            <td> {fullData.yahoofinance.Baixo}</td>\r\n                            <td>{fullData.yahoofinance.Fechamento}</td>\r\n                            <td>{fullData.yahoofinance.volmedioDia}</td>\r\n                            <td>{fullData.yahoofinance.dataPesquisa}</td>\r\n\r\n                        </tr>\r\n\r\n\r\n                    </tbody>\r\n                </Table>\r\n                <br /><br /><br />\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n    const Fundamentus = () => {\r\n        return (\r\n            <>\r\n                <h4>FUNDAMENTUS -{fullData.fundamentos.TICKER} </h4>\r\n                <Table striped bordered hover >\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Preço/Lucro</th>\r\n                            <th>P/VP</th>\r\n                            <th>DY </th>\r\n                            <th>Margem EBTD</th>\r\n                            <th>Margem Líq</th>\r\n                            <th>Liq Corr</th>\r\n                            <th>ROE</th>\r\n                            <th>Cres Receita</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td> {fullData.fundamentos.PL}</td>\r\n                            <td> {fullData.fundamentos.PVP}</td>\r\n                            <td> {fullData.fundamentos.DivYield}</td>\r\n                            <td> {fullData.fundamentos.MrgEbit}</td>\r\n                            <td> {fullData.fundamentos.MrgLiq}</td>\r\n                            <td> {fullData.fundamentos.LiqCorr}</td>\r\n                            <td> {fullData.fundamentos.ROE}</td>\r\n                            <td> {fullData.fundamentos.CrescRec5a}</td>\r\n                        </tr>\r\n\r\n\r\n                    </tbody>\r\n                </Table>\r\n                <br /><br /><br />\r\n            </>\r\n        )\r\n    }\r\n\r\n    const OpcoesAtmCalculadas = () => {\r\n        return (\r\n            <>\r\n\r\n                <OverlayTrigger overlay={<Tooltip id={`tooltip-Atm`}>\r\n                    <>\r\n                        Fonte relatório de checkmm9, reativo ao excel\r\n                    </>\r\n                </Tooltip>}>\r\n                    <h4>OPÇÕES ATM LISTADAS E CALCULADAS - {fullData.fundamentos.TICKER}</h4>\r\n                </OverlayTrigger>\r\n\r\n                <br />\r\n\r\n                <Table striped bordered hover >\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Ticker da Opção</th>\r\n                            <th>Tipo</th>\r\n                            <th>Prêmio Estimado </th>\r\n                            <th>Strike</th>\r\n                            <th>Cotação</th>\r\n                            <th>Strike/Cotação</th>\r\n                            <th>Momento do cálculo</th>\r\n                            <th>Links</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n\r\n                        {fullData.opcoesAtmListCalculadas.map(item => (\r\n                            <tr>\r\n                                <td> {item.optTicker}</td>\r\n                                <td> {optTipo(item.optTicker)}</td>\r\n                                <td> {item.premio}</td>\r\n                                <td> {item.strike}</td>\r\n                                <td> {item.coacaoAtivo}</td>\r\n                                <td> {(((item.strike / item.coacaoAtivo) - 1) * 100).toFixed(2)}%</td>\r\n                                <td > {item.data}</td>\r\n                                <td className=\"centerme\">\r\n                                    <LinksGroup ticker={{\r\n                                        optTicker: item.optTicker,\r\n                                        TICKER: item.TICKER\r\n                                    }} />\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n\r\n                    </tbody>\r\n                </Table>\r\n\r\n\r\n            </>\r\n        )\r\n    }\r\n\r\n    const DemaisOpcoesDe = () => {\r\n        return (\r\n            <>\r\n\r\n<OverlayTrigger overlay={<Tooltip id={`tooltip-Atm`}>\r\n                    <>\r\n                        Fonte relatório busca.csv, \r\n                    </>\r\n                </Tooltip>}>\r\n                <h4>DEMAIS OPÇÕES DE - {fullData.fundamentos.TICKER} - {allOptionsDe.length} papeis</h4>\r\n                </OverlayTrigger>\r\n\r\n                \r\n\r\n                <br />\r\n\r\n                <div className=\"no-scroll\">\r\n                    <Table striped bordered hover >\r\n                        <thead>\r\n                            <tr>\r\n                                <th className=\"tdcol6\">Ticker da Opção</th>\r\n                                <th className=\"tdcol6\">Tipo</th>\r\n\r\n                                <th className=\"tdcol6\">Strike</th>\r\n                                <th className=\"tdcol6\">Strike/Cotação</th>\r\n                                <th className=\"tdcol6\">Calcular</th>\r\n                                <th className=\"tdcol6\">Links</th>\r\n                            </tr>\r\n                        </thead>\r\n                        {/* <tbody></tbody> */}\r\n                    </Table>\r\n                </div>\r\n\r\n                <div className=\"scroll\">\r\n\r\n                    <Table striped bordered hover >\r\n                        <thead>\r\n                            <tr>      </tr>\r\n                        </thead>\r\n                        <tbody>\r\n\r\n                            {allOptionsDe.map(item => (\r\n                                <tr>\r\n                                    <TDisbuy buy={isBuy(\r\n                                        {\r\n                                            optTicker: item.optTicker,\r\n                                            strike: item.strike,\r\n                                            coacaoAtivo: fullData.radarRealtime.qotacao\r\n                                        })\r\n                                    } className=\"tdcol6\"> {item.optTicker}</TDisbuy>\r\n                                    <td className=\"tdcol6\"> {optTipo(item.optTicker)}</td>\r\n                                    <td className=\"tdcol6\"> {item.strike}</td>\r\n                                    <td className=\"tdcol6\"> {(((item.strike / fullData.radarRealtime.qotacao) - 1) * 100).toFixed(2)}%</td>\r\n                                    <td className=\"tdcol6\" >\r\n                                        <Button variant=\"outline-info\"\r\n                                            onClick={() => calculaUmaOpcao(fullData.radarRealtime.qotacao, item.optTicker, ticker, item.strike, optTipo(item.optTicker))}>\r\n                                            {calculando ? <Spinner animation=\"border\" size=\"sm\" /> : \"Calcular\"}\r\n\r\n                                        </Button>\r\n                                    </td>\r\n                                    <td className=\"centerme tdcol6\">\r\n                                        <LinksGroup ticker={{\r\n                                            optTicker: item.optTicker,\r\n                                            TICKER: item.TICKER\r\n                                        }} />\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    const DemaisOpcoesDeCalculedlist = () => {\r\n        return (\r\n            <>\r\n\r\n\r\n                <h4>Histórico de Cálculos -  {savedcalc.length} itens</h4>\r\n                <Button className=\"ml-auto\" variant=\"danger\" onClick={limparHistoricodeCalculados}>Limpar Histórico De Cálculos</Button>\r\n\r\n\r\n                <br />\r\n\r\n                <div className=\"no-scroll \">\r\n                    <Table striped bordered hover >\r\n                        <thead>\r\n                            <tr>\r\n                                <th className=\"tdcol6\">Ticker da Opção</th>\r\n                                <th className=\"tdcol6\">Tipo</th>\r\n                                <th className=\"tdcol6\">Strike</th>\r\n                                <th className=\"tdcol6\">Cotação Base*</th>\r\n                                <th className=\"tdcol6\">Prêmio Base*</th>\r\n                                <th className=\"tdcol6\">Lote Base*</th>\r\n                                <th className=\"tdcol6\">Invest Base</th>\r\n                                <th className=\"tdcol6\">Cotação simulada</th>\r\n                                <th className=\"tdcol6\">Prêmio Simulado</th>\r\n                                {/* <th className=\"tdcol6\">Lote p $500</th> */}\r\n                                <th className=\"tdcol6\">Prêmio Simulado x Lote</th>\r\n                                <th className=\"tdcol6\">Delta Prêmio</th>\r\n                                <th className=\"tdcol6\">Líquido</th>\r\n                            </tr>\r\n                        </thead>\r\n                        {/* <tbody></tbody> */}\r\n                    </Table>\r\n                </div>\r\n\r\n                {savedcalc.length > 0 ?\r\n                    <div className=\"scroll\">\r\n\r\n                        <Table striped bordered hover >\r\n                            <thead>\r\n                                <tr>\r\n\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n\r\n                                {savedcalc.map(item => (\r\n\r\n\r\n                                    <tr>\r\n                                        <td className=\"tdcol6\"> {item.ticker}</td>\r\n                                        <td className=\"tdcol6\"> {item.tipo}</td>\r\n                                        <td className=\"tdcol6\">R$  {item.strike.toFixed(2)}</td>\r\n\r\n                                        <td className=\"tdcol6\"> R$  {item.cotacaoBase}          </td>\r\n                                        <td className=\"tdcol6\"> R$  {item.premioBase.toFixed(2)}         </td>\r\n                                        <td className=\"tdcol6\">  {loteOtimo(500, item.premioBase)} </td>\r\n                                        <td className=\"tdcol6\"> R$ {(loteOtimo(500, item.premioBase) * item.premioBase).toFixed(2)} </td>\r\n                                        <td className=\"tdcol6\"> R$  {item.cotacao.toFixed(2)}          </td>\r\n                                        <td className=\"tdcol6\"> R$  {item.premio.toFixed(2)}         </td>\r\n                                        {/* <td className=\"tdcol6\">  {loteOtimo(500, item.premio)} </td> */}\r\n                                        <td className=\"tdcol6\"> R$ {(item.premio * loteOtimo(500, item.premioBase)).toFixed(2)} </td>\r\n\r\n                                        <td className=\"tdcol6\">  {(((item.premio / item.premioBase) - 1) * 100).toFixed(2)} % </td>\r\n                                        <td className=\"tdcol6\"> {resutLiq((loteOtimo(500, item.premioBase) * item.premioBase), (item.premio * loteOtimo(500, item.premioBase)))}   </td>\r\n                                    </tr>\r\n                                ))}\r\n\r\n                            </tbody>\r\n                        </Table>\r\n                    </div>\r\n                    : <> <br /> <hr /><br /></>}\r\n\r\n            </>\r\n        )\r\n    }\r\n    const RsiData = () => {\r\n        return (\r\n            <>\r\n                <h4 >RSI DATA {fullData.fundamentos.TICKER}</h4>\r\n\r\n                <Table striped bordered hover >\r\n                    <thead>\r\n                        <tr>\r\n                            <th>AÇÃO</th>\r\n                            <th>RSI</th>\r\n                            <th>RSI_ST_FAST </th>\r\n                            <th>Data Report</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td> {fullData.rsiData.TICKER}</td>\r\n                            <td>{fullData.rsiData.RSI}</td>\r\n                            <td>{fullData.rsiData.RSI_ST_FAST}</td>\r\n                            <td>{fullData.rsiData.dataPesquisa}</td>\r\n                        </tr>\r\n\r\n\r\n                    </tbody>\r\n                </Table>\r\n\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    function enterKeyPressed(event) {\r\n\r\n        if (event.key == 'Enter') {\r\n            if (ticker) {\r\n                PegaTodosRealtime()\r\n            }\r\n            return true;\r\n        }\r\n    }\r\n\r\n    function resutLiq(inn, outt) {\r\n        let taxas = (inn + outt) * 0.0025 + 20\r\n        let impostoSwing = (outt - inn) * 0.15\r\n        let impostoDaytrade = (outt - inn) * 0.20\r\n        let resultSwing = outt - inn - taxas - impostoSwing\r\n        let resultDT = outt - inn - taxas - impostoDaytrade\r\n        return (<>\r\n            <div>DT: R$ {resultDT.toFixed(2)} </div>\r\n            <div>ST: R$ {resultSwing.toFixed(2)}</div>\r\n        </>)\r\n\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <Container fluid>\r\n\r\n            <Layout header={`Trading Search ${fullData.fundamentos.TICKER}`}>\r\n                {/* <Destaques /> */}\r\n                <MyModal />\r\n\r\n                <StDiv>\r\n                    <Row>\r\n                        <Col>\r\n                            <Form.Control onKeyPress={enterKeyPressed} className=\"heebof\" type=\"text\" onChange={handleChange} name=\"ticker\" value={ticker.toUpperCase() || \"\"} />\r\n                        </Col>\r\n                        <Col>\r\n                            <Button disabled={!ticker} onClick={PegaTodosRealtime}> Pesquisar</Button>\r\n                        </Col>\r\n\r\n                        <Col md=\"5\">\r\n                            <a target=\"_blank\" rel=\"noopener noreferrer\"\r\n                                href={`https://www.fundamentus.com.br/detalhes.php?papel=${ticker}`}\r\n                                class=\"btn btn-success\"\r\n                                role=\"button\">Fundamentus </a>\r\n\r\n                            <a target=\"_blank\" rel=\"noopener noreferrer\"\r\n                                href={`https://www.tradingview.com/symbols/BMFBOVESPA-${ticker}/technicals/`}\r\n                                class=\"btn btn-primary\"\r\n                                role=\"button\">Trading View </a>\r\n\r\n                            <a target=\"_blank\" rel=\"noopener noreferrer\"\r\n                                href={`https://opcoes.net.br/calculadora-Black-Scholes/${ticker}`}\r\n                                class=\"btn btn-dark\"\r\n                                role=\"button\">Scholes </a>\r\n\r\n                            <a target=\"_blank\" rel=\"noopener noreferrer\"\r\n                                href={`https://twitter.com/search?q=%23${ticker}&src=typed_query&f=live`}\r\n                                class=\"btn btn-primary\"\r\n                                role=\"button\">Twitter </a>\r\n\r\n                            <Button\r\n                                onClick={() => history.push('/alloptions')}\r\n                                variant=\"outline-primary\"\r\n                                role=\"button\">All Options </Button>\r\n\r\n                            <Button\r\n                                onClick={() => history.push('/grafico')}\r\n                                variant=\"outline-danger\"\r\n                                role=\"button\">Grafico </Button>\r\n                        </Col>\r\n\r\n                    </Row>\r\n\r\n                    <br /><br />\r\n                    <Row>\r\n\r\n                        <br /><br />\r\n                        <RadarRealtime />\r\n                        <br /><br />\r\n\r\n                        <OpcoesAtmCalculadas />\r\n                        <br /><br />\r\n                        <br /><br />\r\n                        <br /><br />\r\n                        <DemaisOpcoesDe />\r\n                        <br /><br />\r\n\r\n                        <DemaisOpcoesDeCalculedlist />\r\n                        {/* <iframe width=\"1024\" height=\"768\" src=\"https://www.tradingview.com/symbols/BMFBOVESPA-BRKM5/\"></iframe> */}\r\n                        <br /><br />\r\n\r\n                        {/* <Yahoofinance /> */}\r\n                        <br /><br />\r\n\r\n                        <RsiData />\r\n\r\n                        <br /><br /><br /><br /><br /><br />\r\n\r\n\r\n                        <Fundamentus />\r\n\r\n                    </Row>\r\n\r\n                </StDiv>\r\n                <ToTopButton />\r\n            </Layout>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Trade\r\n\r\n\r\n/**Div */\r\nexport const StDiv = styled.div`\r\nbackground-color: white;\r\nmin-height: 100vh;\r\npadding: 20px;\r\n/* font-family: Arial, Helvetica, sans-serif; */\r\nfont-family: 'Heebo', sans-serif ;\r\ntransition: 1000ms;\r\n\r\n.btn{\r\nmargin: 0 5px 5px 5px;\r\nmin-width: 100px;\r\n}\r\n\r\n\r\n\r\nh4, th, td{\r\n    font-family: 'Heebo', sans-serif ;\r\n}\r\n.center{\r\n    background-size: 100% 100%;  //ajusta as dimensões da imagem às da DIV\r\n    display:flex;\r\nalign-items:center;\r\njustify-content:center;\r\ntransition : 1000ms;\r\nwidth: 250px;\r\nheight: 360px;\r\n}\r\n\r\n.centerme{   \r\n   display:flex;\r\n   align-items:center;\r\n   justify-content:center;\r\n}\r\n\r\n.scroll {\r\nborder-top:0.5px solid rgb(205, 209, 213); \r\nheight: 250px;\r\noverflow-x: hidden;\r\noverflow-y: auto;\r\nwidth: 100%;\r\nmargin: -10px 0 60px 0;\r\nbox-shadow: 5px 5px 5px 5px rgb(205, 209, 213) ;\r\n\r\nth, td {\r\n    width: 20vw; \r\n}\r\n\r\n}\r\n\r\n.no-scroll{\r\n    width:95vw;\r\n    th  {\r\n    width: 20%;\r\n    border: none;\r\n    text-align:center;\r\n}\r\n.tdcol6{\r\n    width: 8.33vw; \r\n}\r\n\r\n.red{\r\n    color: red;\r\n    font-weight: 900;\r\n}\r\n\r\n}`\r\n/* #root > div > div.sc-vUDtZ.fuaCwZ > div:nth-child(4) > table:nth-child(17) > thead > tr > th:nth-child(1) */\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\tomaz\\personal\\src\\util\\objeto.js",[],"C:\\Users\\tomaz\\personal\\src\\config\\http.js",["246"],"import axios from 'axios'\r\n// import { getToken, removeToken } from './auth';\r\nimport history from './history'\r\n// import { toastr } from \"react-redux-toastr\";\r\n\r\n\r\n\r\nconst http = axios.create({\r\n//https://codersrede.herokuapp.com/\r\n    \r\n    baseURL:  process.env.NODE_ENV === 'development'\r\n    ? `https://localhost:3005/`\r\n    : process.env.REACT_APP_API\r\n})\r\n\r\nhttp.defaults.headers['Content-type'] = 'application/json'\r\nhttp.defaults.headers[\"x-forwarded-proto\"] = \"https\"\r\n\r\n// if (getToken()) {\r\n//     http.defaults.headers[\"x-auth-token\"] = getToken();\r\n// }\r\n\r\nhttp.interceptors.response.use(\r\n    response => response,\r\n    error => {\r\n \r\n        // const { response: { status } } = error\r\n\r\n        // if (error.message === 'Network Error' && !error.message) {\r\n        //     alert('você está sem internet...reconecte !!!!!')\r\n        // }\r\n\r\n        // switch (status) { \r\n        //     case 401:\r\n\r\n        //         break;\r\n\r\n        //     case 500:\r\n\r\n        //         break;\r\n\r\n        //     case 404:\r\n\r\n        //             break;\r\n        //     default:\r\n              \r\n        //         break;\r\n        // }\r\n\r\n        // // axios.interceptors.response.eject(interceptors) // global\r\n        // return Promise.reject(error)\r\n    }\r\n)\r\n\r\nexport default http;\r\n","C:\\Users\\tomaz\\personal\\src\\util\\functioncallput.js",[],"C:\\Users\\tomaz\\personal\\src\\components\\allOpcoes.js",["247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262"],"import React, { useEffect, useState } from 'react'\r\nimport { Col, Navbar, Row, Container, Table, Button, DropdownButton, Dropdown, ButtonGroup } from 'react-bootstrap'\r\nimport styled from 'styled-components'\r\nimport { getRealTimeRadar, todasOpcoesCalculadas } from '../services/trader'\r\nimport optTipo from '../util/functioncallput'\r\nimport { acao } from '../util/objeto'\r\nimport history from '../config/history';\r\nimport Destaques from './destaques'\r\nimport ToTopButton from './topButton'\r\nimport Layout from './layout/layout'\r\nimport Listr from './destaquesv.js'\r\nimport { adicionaLST} from '../util/localsthandler'\r\n\r\nexport function isBuy(item) {\r\n    let temp;\r\n\r\n    if (optTipo(item.optTicker) === \"CALL\") {\r\n        temp = item.coacaoAtivo > item.strike\r\n    } else {\r\n        temp = item.coacaoAtivo < item.strike\r\n    }\r\n    return temp\r\n\r\n}\r\n\r\n\r\nconst AllOptionsListed = () => {\r\n    /**Força o update no usestate */\r\n    const [forceUpdate, setForceUpdate] = useState(1)\r\n    const [fullData, setFullData] = useState(acao.opcoesAtmListCalculadas)\r\n    /**As opções calsuladas e que serão exibidas são estas: */\r\n    const [filtrada, setFiltrada] = useState(fullData)\r\n    /**Series existentes */\r\n    const [seriesExistentes, setSeriesExistentes] = useState([])\r\n\r\n    const [autoRefresh, setautoRefresh] = useState(false)\r\n\r\n    const originalFilter = {\r\n        itm: false,\r\n        seriesVisualizadas: [],\r\n        tipo: \"\"\r\n    }\r\n    const [multiFilter, setMultiFilter] = useState(originalFilter)\r\n\r\n\r\n    const defineSeries = (e) => {\r\n        let temp = multiFilter.seriesVisualizadas\r\n        if (temp.includes(e)) {\r\n            const index = temp.indexOf(e);\r\n            temp.splice(index, 1);\r\n        } else {\r\n            temp.push(e)\r\n        }\r\n\r\n        setMultiFilter({\r\n            ...multiFilter,\r\n            seriesVisualizadas: temp\r\n        })\r\n    }\r\n\r\n    /**Deve adicionar ou inserir as séries a serem exibidas na lista */\r\n    const aplicarFiltros = () => {\r\n\r\n        let ser = [...fullData]\r\n\r\n        ser = ser.filter(item => multiFilter.seriesVisualizadas.includes(item.serie))\r\n\r\n        if (multiFilter.tipo) {\r\n            ser = ser.filter(item => optTipo(item.optTicker) == multiFilter.tipo)\r\n        }\r\n\r\n        if (multiFilter.itm) {\r\n            ser = ser.filter(item => isBuy(item))\r\n        }\r\n\r\n\r\n\r\n        setFiltrada(ser)\r\n\r\n    }\r\n\r\n    function ajustaFloat(item) {\r\n        let x = \"\"\r\n\r\n        try {\r\n            x = item.replace(\",\", \".\")\r\n        } catch {\r\n            x = 0\r\n        }\r\n\r\n        return parseFloat(x) || 0\r\n    }\r\n\r\n\r\n\r\n    const removerTodosOsFiltros = () => {\r\n\r\n        setMultiFilter(\r\n            {\r\n                ...originalFilter,\r\n                seriesVisualizadas: [...seriesExistentes]\r\n            })\r\n    }\r\n\r\n\r\n    const carregarTodasOpcoesCalculadas = async () => {\r\n\r\n        await todasOpcoesCalculadas()\r\n            .then((res) => {\r\n            \r\n                res.data.map(item => {\r\n\r\n                    if (!seriesExistentes.includes(item.serie)) {\r\n                        seriesExistentes.push(item.serie)\r\n                        multiFilter.seriesVisualizadas.push(item.serie)\r\n                    }\r\n\r\n                })\r\n\r\n                setSeriesExistentes(seriesExistentes.sort(function (a, b) {\r\n                    if (a > b) { return 1 }\r\n                    if (a < b) { return -1 }\r\n                    return 0;\r\n                }))\r\n\r\n                res.data = res.data.filter(item => item.optTicker)\r\n\r\n                res.data = res.data.sort(function (a, b) {\r\n                    if (a.premio > b.premio) {\r\n                        return 1;\r\n                    }\r\n                    if (a.premio < b.premio) {\r\n                        return -1;\r\n                    }\r\n                    return 0;\r\n                })\r\n\r\n                setFullData(res.data)\r\n         \r\n                if (autoRefresh || filtrada.length <= 1) {\r\n                    setFiltrada(res.data)\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n\r\n    const sortFiltrada = (i) => {\r\n        let temp = sorteada(i)\r\n        setFiltrada(temp)\r\n        setForceUpdate(1 + forceUpdate)\r\n    }\r\n\r\n\r\n\r\n\r\n    const sorteada = (sortearPor = \"TICKER\") => {\r\n\r\n        return filtrada.sort(function (a, b) {\r\n            if (a[sortearPor] > b[sortearPor]) { return 1 }\r\n            if (a[sortearPor] < b[sortearPor]) { return -1 }\r\n            return 0;\r\n        })\r\n    }\r\n\r\n\r\n    const sortFiltradaAllDataObj = (i) => {\r\n        let temp = sorteadaAllDataObj(i)\r\n        setFiltrada(temp)\r\n        setForceUpdate(1 + forceUpdate)\r\n    }\r\n\r\n    const sorteadaAllDataObj = (sortearPor = \"TICKER\") => {\r\n\r\n        return filtrada.sort(function (a, b) {\r\n            if (a.allDataObj[sortearPor] > b.allDataObj[sortearPor]) { return 1 }\r\n            if (a.allDataObj[sortearPor] < b.allDataObj[sortearPor]) { return -1 }\r\n            return 0;\r\n        })\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n            aplicarFiltros()\r\n        }, [multiFilter])\r\n\r\n    useEffect(\r\n        () => {\r\n\r\n\r\n        }, [filtrada, forceUpdate])\r\n\r\n    useEffect(\r\n        () => {\r\n            carregarTodasOpcoesCalculadas()\r\n        }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            carregarTodasOpcoesCalculadas()\r\n        }, 60 * 1000);\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n\r\n    const Linkes = (props) => {\r\n        return (\r\n            <Dropdown as={ButtonGroup}>\r\n                <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-split-basic\" />\r\n\r\n                <Dropdown.Menu  onClick={()=>adicionaLST(props.ticker.TICKER)}>\r\n                    <Dropdown.Item\r\n                        target=\"_blank\" rel=\"noopener noreferrer\"\r\n                        href={`https://www.fundamentus.com.br/detalhes.php?papel=${props.ticker.TICKER}`}>Fundamentus</Dropdown.Item>\r\n\r\n                    <Dropdown.Item\r\n                        target=\"_blank\" rel=\"noopener noreferrer\"\r\n                        href={`https://www.tradingview.com/symbols/BMFBOVESPA-${props.ticker.TICKER}/technicals/`}>Trading View</Dropdown.Item>\r\n\r\n                    <Dropdown.Item\r\n                        target=\"_blank\" rel=\"noopener noreferrer\"\r\n                        href={`https://opcoes.net.br/calculadora-Black-Scholes/${props.ticker.optTicker}`}>Black Scholes</Dropdown.Item>\r\n\r\n                    <Dropdown.Item\r\n                        target=\"_blank\" rel=\"noopener noreferrer\"\r\n                        href={`https://br.tradingview.com/chart/?symbol=BMFBOVESPA%3A${props.ticker.TICKER}`}>GraficoTRV</Dropdown.Item>\r\n\r\n                    <Dropdown.Item\r\n                        target=\"_blank\" rel=\"noopener noreferrer\"\r\n                        href={`https://twitter.com/search?q=%23${props.ticker.TICKER}&src=typed_query&f=live`}>Twitter</Dropdown.Item>\r\n\r\n                    <Dropdown.Item\r\n                        target=\"_blank\" rel=\"noopener noreferrer\"\r\n                        href={`https://opcoes.net.br/opcoes/bovespa/${props.ticker.TICKER}`}>Opções Net</Dropdown.Item>\r\n\r\n\r\n                    <Dropdown.Item>\r\n                        <Button onClick={() => history.push(`trade/${props.ticker.TICKER}`)}\r\n                            variant=\"link\"\r\n                        >  Scan  </Button>\r\n\r\n                    </Dropdown.Item>\r\n\r\n                    <Dropdown.Item>\r\n                        <Button onClick={() => history.push(`calculadora/${props.ticker.optTicker}`)}\r\n                            variant=\"link\"\r\n                        >  Calculadora  </Button>\r\n\r\n                    </Dropdown.Item>\r\n\r\n\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n\r\n\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <Container fluid>\r\n            <Layout header={`Todas as opções.`}>\r\n\r\n                {/* <Destaques /> */}\r\n                <StDiv>\r\n                    <Row>\r\n                        <Button\r\n\r\n                            variant={multiFilter.tipo == \"CALL\" ? \"secondary\" : \"outline-secondary\"}\r\n                            onClick={() =>\r\n\r\n                                setMultiFilter({\r\n                                    ...multiFilter,\r\n                                    tipo: multiFilter.tipo == \"CALL\" ? \"\" : \"CALL\"\r\n                                })\r\n                            }>Calls</Button>\r\n\r\n                        <Button\r\n                            variant={multiFilter.tipo == \"PUT\" ? \"danger\" : \"outline-danger\"}\r\n                            onClick={() =>\r\n                                setMultiFilter({\r\n                                    ...multiFilter,\r\n                                    tipo: multiFilter.tipo == \"PUT\" ? \"\" : \"PUT\"\r\n                                })\r\n                            }>Puts</Button>\r\n\r\n                        <Button variant={multiFilter.itm ? \"success\" : \"outline-success\"}\r\n                            onClick={() =>\r\n                                setMultiFilter({\r\n                                    ...multiFilter,\r\n                                    itm: !multiFilter.itm\r\n                                })\r\n                            }>Apenas ITM</Button>\r\n\r\n\r\n                        {seriesExistentes.map(item => (\r\n                            <Button variant={multiFilter.seriesVisualizadas.includes(item) ? \"info\" : \"outline-info\"} onClick={() => defineSeries(item)}>Série {item}</Button>\r\n                        ))}\r\n\r\n                        <Button variant=\"outline-info\" onClick={removerTodosOsFiltros}>Sem Filtro</Button>\r\n\r\n                        <Button \r\n                        variant={autoRefresh ? \"info\":  \"outline-info\"} \r\n                        onClick={() => setautoRefresh(!autoRefresh)}\r\n                        >{autoRefresh ? \"Auto Refresh ON\": \"Auto Refresh OFF\"}</Button>\r\n\r\n                    </Row>\r\n                    <br /> <br />\r\n                    <Row>\r\n                        <br /><br /><br />\r\n                        <h4>Opções calculadas. Exibindo {filtrada.length} itens.</h4>\r\n                        <br />\r\n\r\n                        <Table striped bordered hover >\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>\r\n                                        <Button variant=\"link\" onClick={() => sortFiltrada('TICKER')}>Ticker do Ativo</Button>\r\n                                    </th>\r\n                                    <th >Ticker da Opção</th>\r\n                                    <th>Série</th>\r\n                                    <th>Tipo</th>\r\n                                    <th>\r\n                                        <Button variant=\"link\" onClick={() => sortFiltrada('premio')}>Prêmio Estimado</Button>\r\n                                    </th>\r\n                                    <th>Strike</th>\r\n                                    <th>Cotação</th>\r\n                                    <th>Strike/Cotação</th>\r\n                                    <th> <Button variant=\"link\" onClick={() => sortFiltrada('atualPorMM9')}> Atual / MM9</Button></th>\r\n\r\n                                    <th>\r\n                                        <Button variant=\"link\" onClick={() => sortFiltradaAllDataObj('deltaVol')}> Delta Vol</Button>\r\n                                    </th>\r\n\r\n                                    <th>DeltaPreco</th>\r\n                                    <th>Momento do cálculo</th>\r\n                                    <th>Links</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n\r\n                                {filtrada.map(item => (\r\n                                    <tr>\r\n                                        <TDisbuy buy={isBuy(item)}> {item.TICKER}</TDisbuy>\r\n                                        <td> {item.optTicker}</td>\r\n                                        <td> {item.serie}</td>\r\n                                        <td> {optTipo(item.optTicker)}</td>\r\n                                        <td> {item.premio}</td>\r\n                                        <td> {item.strike}</td>\r\n                                        <td> {item.coacaoAtivo}</td>\r\n                                        <td>  {(((item.strike / item.coacaoAtivo) - 1) * 100).toFixed(2)}%</td>\r\n                                        {/* <td> {(((item.strike / item.coacaoAtivo)-1)*100).toFixed(2)}%</td> */}\r\n                                        <td> {item.allDataObj?.atualPorMM9}</td>\r\n                                        <td> {item.allDataObj?.deltaVol}</td>\r\n                                        <td> {item.allDataObj?.deltaPreco}</td>\r\n                                        <td> {item.data}</td>\r\n                                        <td className=\"centerme\"><Linkes ticker={item} /></td>\r\n                                    </tr>\r\n                                ))}\r\n\r\n                            </tbody>\r\n                        </Table>\r\n                    </Row>\r\n\r\n                </StDiv>\r\n                <ToTopButton />\r\n            </Layout>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default AllOptionsListed\r\n\r\n\r\n/**Div */\r\nconst StDiv = styled.div`\r\nbackground-color: white;\r\nmin-height: 100vh;\r\npadding: 20px;\r\n/* font-family: Arial, Helvetica, sans-serif; */\r\nfont-family: 'Heebo', sans-serif ;\r\n\r\n.btn{\r\nmargin: 0 5px 0 5px;\r\nmin-width: 100px;\r\n}\r\n\r\ntd a .btn{\r\nmargin-left: auto; \r\nmargin-right: auto;\r\n}\r\n\r\ntd a {\r\nmargin-left: auto; \r\nmargin-right: auto;\r\n\r\n}\r\n\r\n.centerme{\r\n   \r\n   display:flex;\r\n   align-items:center;\r\n   justify-content:center;\r\n}\r\n\r\nth{\r\n text-align:center;\r\n}\r\nh4, th, td{\r\n    font-family: 'Heebo', sans-serif ;\r\n    font-weight: 900;\r\n    text-align:center;\r\n}\r\n.center{\r\n    background-size: 100% 100%;  //ajusta as dimensões da imagem às da DIV\r\n    display:flex;\r\nalign-items:center;\r\njustify-content:center;\r\ntransition : 1000ms;\r\nwidth: 250px;\r\nheight: 360px;\r\n}\r\n\r\n`\r\n\r\nexport const TDisbuy = styled.td`\r\nbackground-color: ${props => props.buy ? `#28a745` : `transparent`}; \r\n\r\n`\r\n\r\n\r\n","C:\\Users\\tomaz\\personal\\src\\components\\destaques.js",["263","264","265","266","267","268","269"],"import React, { useEffect, useState } from 'react'\r\nimport { Col, Navbar, Row, Container, Table, Button, Form, OverlayTrigger, Tooltip, Carousel } from 'react-bootstrap'\r\nimport styled from 'styled-components'\r\nimport { getRealTimeRadar } from '../services/trader'\r\nimport { adicionaLST} from '../util/localsthandler'\r\nimport { acao } from '../util/objeto'\r\nimport history from '../config/history';\r\nimport LinksGroup from './linksgroup'\r\nimport { STTable } from './comparador'\r\n//https://scotch.io/bar-talk/convert-class-components-to-functional-components-in-a-react-project-solution-to-code-challenge-14\r\n\r\n/**Lê radarRealtime: `cache/radarRealtime.csv` */\r\nconst Destaques = (props) => {\r\n\r\n\r\n    const [fullData, setFullData] = useState(acao.opcoesAtmListCalculadas)\r\n    const [destaqueVol, setDestaqueVol] = useState([])\r\n    const [destaquePrice, setDestaquePrice] = useState([])\r\n    const [destaqueLowPrice, setDestaqueLowPrice] = useState([])\r\n    const [destaqueMM9, setDestaqueMM9] = useState([])\r\n    const [lpapvp, setlpapvp] = useState([])\r\n    \r\n\r\n    const [fastOtimo, setFastOtimo] = useState([])\r\n    const [cruzou, setCruzou] = useState([])\r\n    const [otimoHold, setOtimoHold] = useState([])\r\n    const [melhorRSI, setMelhorRSI] = useState([])\r\n    const [melhorFundamentos, setMelhorFundamentos] = useState([])\r\n    const [melhorqualPrecoFund, setMelhorqualPrecoFund] = useState([])\r\n    const [melhorqualSaudeFund, setMelhorqualSaudeFund] = useState([])\r\n    //qualSaudeFund\r\n    const [count, setCount] = useState(0);\r\n    const [index, setIndex] = useState(0);\r\n\r\n    const handleSelect = (selectedIndex, e) => {\r\n        setIndex(selectedIndex);\r\n    };\r\n\r\n    const limiteDistMM9 = 0.01\r\n\r\n    const carregarUm = () => {\r\n    \r\n        const getdataOne = getRealTimeRadar()\r\n            .then((res) => {\r\n                // res.data.map(item => item.ascMM9 = item.ascMM9)\r\n                res.data.map(item => item.atualPorMM9d = Math.abs(1 - item.atualPorMM9))\r\n\r\n                setFullData(res.data)\r\n\r\n                res.data = res.data.sort(function (a, b) {\r\n                    if (a.deltaVol < b.deltaVol) {\r\n                        return 1;\r\n                    }\r\n                    if (a.deltaVol > b.deltaVol) {\r\n                        return -1;\r\n                    }\r\n                    return 0;\r\n                })\r\n                setDestaqueVol(res.data.slice(0, 10))\r\n\r\n\r\n                let Price = res.data.sort(function (a, b) {\r\n                    if (a.deltaPreco < b.deltaPreco) {\r\n                        return 1;\r\n                    }\r\n                    if (a.deltaPreco > b.deltaPreco) {\r\n                        return -1;\r\n                    }\r\n                    return 0;\r\n                })\r\n\r\n                setDestaquePrice(Price.slice(0, 10))\r\n\r\n                let LowPrice = res.data.sort(function (a, b) {\r\n                    if (a.deltaPreco < b.deltaPreco) {\r\n                        return -1;\r\n                    }\r\n                    if (a.deltaPreco > b.deltaPreco) {\r\n                        return 1;\r\n                    }\r\n                    return 0;\r\n                })\r\n\r\n                setDestaqueLowPrice(LowPrice.slice(0, 10))\r\n\r\n                let Mm9 = res.data.filter(item => item.atualPorMM9d <= limiteDistMM9)\r\n                    .filter(item => item.atualPorMM9 >= 1)\r\n                    .filter(item => item.ascMM9 > 0.50)\r\n                    .sort(function (a, b) {\r\n                        if (a.atualPorMM9 > b.atualPorMM9) {\r\n                            return 1;\r\n                        }\r\n                        if (a.atualPorMM9 < b.atualPorMM9) {\r\n                            return -1;\r\n                        }\r\n                        return 0;\r\n                    })\r\n\r\n                setDestaqueMM9(Mm9.slice(0, 10))\r\n\r\n                let Cruzados = res.data.filter(item => item.cruzamento)\r\n                    .filter(item => item.cruzamento.includes(\"ruzou\"))\r\n                setCruzou(Cruzados)\r\n\r\n                //Seleção Ótima\r\n                let otimoSwingt = res.data.filter(item => item.theGap > 0.005) \r\n                    .filter(item => item.deltaVol > 0.9)\r\n                    .filter(item => item.deltaPreco > 0.01) //\r\n                    .slice(0, 20)\r\n                    .sort(function (a, b) {\r\n                        if (a.ascMM9 > b.ascMM9) { return 1 }\r\n                        if (a.ascMM9 < b.ascMM9) { return -1 }\r\n                        return 0;\r\n                    })\r\n                //Seleção Ótima\r\n                setFastOtimo(otimoSwingt)\r\n\r\n               \r\n                /**ótimop holdar */\r\n                let otimoHoldar = res.data.filter(item => item.dyNow > 0)\r\n                otimoHoldar = otimoHoldar.filter(item => item.dividaLiqToNode <= 0)\r\n                // otimoHoldar = otimoHoldar.filter(item => item.rsiToNode <= 40)\r\n                otimoHoldar = otimoHoldar.filter(item => item.lpa > 0)\r\n                otimoHoldar = otimoHoldar.filter(item => item.precoPorLucro > 0 && item.precoPorLucro <= 36.36)\r\n                otimoHoldar = otimoHoldar.filter(item => item.pvpnow > 0 && item.pvpnow <= 3)\r\n                otimoHoldar = otimoHoldar.filter(item => item.qotacao <= item.vlrIntrinseco)\r\n\r\n                setOtimoHold(otimoHoldar)\r\n\r\n\r\n                let bestRSI = res.data.sort(function (a, b) {\r\n\r\n                    if (a.rsiMedia > b.rsiMedia) {\r\n                        return 1;\r\n                    }\r\n                    if (a.rsiMedia < b.rsiMedia) {\r\n                        return -1;\r\n                    }\r\n                  \r\n                     return 0;\r\n                }).slice(0, 18)\r\n\r\n                setMelhorRSI(bestRSI)\r\n\r\n                let lpapvp = res.data.sort(function (a, b) {\r\n\r\n                    if (a.lpaSobrePvp < b.lpaSobrePvp) {\r\n                        return 1;\r\n                    }\r\n                    if (a.lpaSobrePvp > b.lpaSobrePvp) {\r\n                        return -1;\r\n                    }\r\n                    \r\n                    return 0;\r\n                }).filter(item => item.lpaSobrePvp > 0)\r\n                .filter(item => item.pvpnow < 1)\r\n\r\n                setlpapvp(lpapvp)\r\n\r\n\r\n                let bestFundamentais = res.data.sort(function (a, b) {\r\n\r\n                    if (a.pontosFundamentais > b.pontosFundamentais) {\r\n                        return -1;\r\n                    }\r\n                    if (a.pontosFundamentais < b.pontosFundamentais) {\r\n                        return 1;\r\n                    }\r\n                    \r\n                    return 0;\r\n                }).slice(0, 18)\r\n\r\n                setMelhorFundamentos(bestFundamentais)\r\n\r\n\r\n                let qualPrecoFund = res.data.sort(function (a, b) {\r\n\r\n                    if (a.qualPrecoFund > b.qualPrecoFund) {\r\n                        return -1;\r\n                    }\r\n                    if (a.qualPrecoFund < b.qualPrecoFund) {\r\n                        return 1;\r\n                    }\r\n                    return 0;\r\n                }).slice(0, 18)\r\n\r\n                setMelhorqualPrecoFund(qualPrecoFund)\r\n\r\n                let qualSaudeFund = res.data.sort(function (a, b) {\r\n\r\n                    if (a.qualSaudeFund > b.qualSaudeFund) {\r\n                        return -1;\r\n                    }\r\n                    if (a.qualSaudeFund < b.qualSaudeFund) {\r\n                        return 1;\r\n                    }\r\n                    return 0;\r\n                }).slice(0, 18)\r\n\r\n                setMelhorqualSaudeFund(qualSaudeFund)\r\n\r\n            })\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    useEffect(\r\n        () => {\r\n            carregarUm()\r\n        }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        setInterval(() => {\r\n            //ponha aqui a função que irá atualizar seu state\r\n            carregarUm()\r\n        }, 5 * 60 * 1000)\r\n    }, []);\r\n\r\n\r\n    const goAndUpdate = (TICKER) => {\r\n        history.push(`/trade/${TICKER}`)\r\n        window.location.reload()\r\n    }\r\n\r\n\r\n\r\n    const Monttable = (props) => {\r\n\r\n        const defaultFields = props.colunas ? props.colunas : ['Ticker']\r\n\r\n\r\n        return (\r\n            <>\r\n                <br />\r\n                <h4>Monttable: {props.label} </h4>\r\n                <h4>Hora Report: {fullData[0]?.dataPesquisa} </h4>\r\n                <br />\r\n                <div className=\"montttable\" >\r\n                    <Table striped bordered hover >\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Ticker </th>\r\n                                {props.exibeColuna ? <th>{props.exibeColuna} </th> : \"\"}\r\n                                <th>Cotação</th>\r\n                                <th>D$ % </th>\r\n                                <th>Persist MM9</th>\r\n                                <th>DY Now</th>\r\n                                <th>D Vol</th>\r\n                                <th>Distância MM9</th>\r\n                                <th>Opções</th>\r\n                                <th>Links</th>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        <tbody>\r\n\r\n                            {props.tabela.map(item => (\r\n                                <tr>\r\n                                     <td> {item.TICKER}</td>\r\n                                    {/* <td> <Button variant=\"link\" onClick={() => goAndUpdate(item.TICKER)} >{item.TICKER}</Button></td> */}\r\n                                    {props.exibeColuna ? <td>{item[props.exibeColuna]} </td> : \"\"}\r\n                                    <td> {item.qotacao.toFixed(2)}</td>\r\n                                    <td> {(item.deltaPreco * 100).toFixed(2)}</td>\r\n                                    <td> {(item.ascMM9 - 0.25) / 0.25} </td>\r\n                                    <td> {(item.dyNow * 100).toFixed(2)}%</td>\r\n                                    <td> {item.deltaVol}</td>\r\n                                    <td>{((item.atualPorMM9 - 1) * 100).toFixed(2)}</td>\r\n                                    <td> {item.opcoesAtmSugeridas}</td>\r\n                                    <td>\r\n                                        <LinksGroup onClick={()=>adicionaLST(item.TICKER)} ticker={{\r\n\r\n                                            TICKER: item.TICKER\r\n                                        }} />\r\n\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n\r\n                        </tbody>\r\n\r\n                    </Table>\r\n                    {/* </div> */}\r\n                </div>\r\n                <br />\r\n                <hr />\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    /**Ticker e links button sempre aparecem na extremidade, logo não precisa por no array.\r\n     * \r\n     */\r\n    const MonttableArr = (props) => {\r\n\r\n        const defaultFields = props.colunas ? props.colunas : ['Ticker']\r\n\r\n\r\n        return (\r\n            <>\r\n                <br />\r\n                <h4>{props.label} </h4>\r\n                <h4> MonttableArr - Hora Report: {fullData[0]?.dataPesquisa} </h4>\r\n                <br />\r\n                <div className=\"montttable\" >\r\n                    <STTable striped bordered hover >\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Ticker</th>\r\n                                {defaultFields.map(item => <th>{item}</th>)}\r\n\r\n                                <th>Opções</th>\r\n                                <th>Links</th>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        <tbody className=\"no-scroll\">\r\n\r\n                            {props.tabela.map(item => (\r\n                                <tr>\r\n                                    <td> {item.TICKER}</td>\r\n\r\n\r\n                                    {defaultFields.map(itemf => (<td> {item[itemf]} </td>))}\r\n                                    <td> {item.opcoesAtmSugeridas}</td>\r\n                                    <td>\r\n                                        <LinksGroup  ticker={{\r\n\r\n                                            TICKER: item.TICKER\r\n                                        }} />\r\n\r\n                                    </td>\r\n\r\n                                    \r\n                                </tr>\r\n                            ))}\r\n\r\n                        </tbody>\r\n\r\n                    </STTable>\r\n                    {/* </div> */}\r\n                </div>\r\n                <br />\r\n                <hr />\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <StDiv2>\r\n            <h4>Hora Report: {fullData[0]?.dataPesquisa} </h4>\r\n            {!props.tabela ?\r\n            <Row>\r\n                <Carousel fade activeIndex={index} onSelect={handleSelect}>\r\n\r\n                    <Carousel.Item >\r\n                        <Table striped bordered hover >\r\n                            <thead>\r\n                                <tr>\r\n                                    <th className=\"thc\">Holdar Ótimos {otimoHold.length} </th>\r\n                                    <th className=\"thc\">Cotação</th>\r\n                                    <th className=\"thc\">Valor Intrinseco</th>\r\n\r\n                                    <th className=\"thc\">Dívida Liquida </th>\r\n                                    <th className=\"thc\">RSI</th>\r\n                                    <th className=\"thc\">DY Now</th>\r\n                                    <th className=\"thc\">LPA</th>\r\n                                    <th className=\"thc\">P/Lucro</th>\r\n                                    <th className=\"thc\">PVP Now</th>\r\n                                </tr>\r\n                            </thead>\r\n                        </Table>\r\n\r\n                        <div className=\"scroll\">\r\n                            <Table striped bordered hover >\r\n                                <thead>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {otimoHold.map(item => (\r\n                                        <tr>\r\n                                            {/* <td className=\"thc\"> {item.TICKER}</td> */}\r\n                                            <td> <Button variant=\"link\" onClick={() => goAndUpdate(item.TICKER)} >{item.TICKER}</Button></td>\r\n                                            <td className=\"thc\"> {item.qotacao.toFixed(2)}</td>\r\n                                            <td className=\"thc\"> {item.vlrIntrinseco.toFixed(2)}</td>\r\n\r\n                                            <td className=\"thc\"> {item.dividaLiqToNode}</td>\r\n                                            <td className=\"thc\"> {item.rsiToNode} </td>\r\n                                            <td className=\"thc\"> {item.dyNow}%</td>\r\n                                            <td className=\"thc\"> {item.lpa}</td>\r\n                                            <td className=\"thc\">{item.precoPorLucro.toFixed(2)}</td>\r\n                                            <td className=\"thc\"> {item.pvpnow.toFixed(2)}</td>\r\n\r\n                                        </tr>\r\n                                    ))}\r\n\r\n                                </tbody>\r\n\r\n                            </Table>\r\n                        </div>\r\n\r\n                    </Carousel.Item>\r\n\r\n\r\n                    <Carousel.Item >\r\n                        <Table striped bordered hover >\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Fast Ótimos </th>\r\n                                    <th>Cotação</th>\r\n                                    <th>D$ % </th>\r\n                                    <th>Persist MM9</th>\r\n                                    <th>DY Now</th>\r\n                                    <th>D Vol</th>\r\n                                    <th>Distância MM9</th>\r\n                                    <th>Opções</th>\r\n                                </tr>\r\n                            </thead>\r\n                        </Table>\r\n\r\n                        <div className=\"scroll\">\r\n                            <Table striped bordered hover >\r\n                                <thead>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n\r\n                                    {fastOtimo.map(item => (\r\n                                        <tr>\r\n                                             {/* <td className=\"thc\"> {item.TICKER}</td> */}\r\n                                            <td> <Button variant=\"link\" onClick={() => goAndUpdate(item.TICKER)} >{item.TICKER}</Button></td>\r\n                                            <td> {item.qotacao.toFixed(2)}</td>\r\n                                            <td> {(item.deltaPreco * 100).toFixed(2)}</td>\r\n                                            <td> {(item.ascMM9 - 0.25) / 0.25} </td>\r\n                                            <td> {item.dyNow}%</td>\r\n                                            <td> {item.deltaVol}</td>\r\n                                            <td>{((item.atualPorMM9 - 1) * 100).toFixed(2)}</td>\r\n                                            <td> {item.opcoesAtmSugeridas}</td>\r\n\r\n                                        </tr>\r\n                                    ))}\r\n\r\n                                </tbody>\r\n\r\n                            </Table>\r\n                        </div>\r\n\r\n                    </Carousel.Item>\r\n\r\n\r\n                    <Carousel.Item>\r\n\r\n                        <h5>Destaques Volume </h5>\r\n                        {destaqueVol.map(item =>\r\n                            <OverlayTrigger overlay={<Tooltip id={`tooltip-disabled-v${item.TICKER}`}>\r\n                                <>\r\n                                    Vol: {item.deltaVol}\r\n                                    <br />\r\n                                    {item.dataPesquisa}\r\n                                </>\r\n                            </Tooltip>}>\r\n                                <Button variant=\"primary\" onClick={() => goAndUpdate(item.TICKER)} >{item.TICKER}</Button>\r\n                            </OverlayTrigger>\r\n                        )}\r\n\r\n\r\n\r\n\r\n                    </Carousel.Item>\r\n\r\n                    <Carousel.Item>\r\n                        <h5>Destaques Alta</h5>\r\n\r\n                        {destaquePrice.map(item =>\r\n                            //  <Button variant=\"success\" onClick={() => goAndUpdate(item.TICKER)} >{item.TICKER}</Button>\r\n                            <OverlayTrigger overlay={<Tooltip id={`tooltip-disabled-p${item.TICKER}`}>D$: {item.deltaPreco} </Tooltip>}>\r\n                                <Button variant=\"success\" onClick={() => goAndUpdate(item.TICKER)} >{item.TICKER}</Button>\r\n                            </OverlayTrigger>\r\n                        )}\r\n\r\n                    </Carousel.Item>\r\n\r\n                    <Carousel.Item>\r\n                        <h5>Destaques Baixa</h5>\r\n                        {destaqueLowPrice.map(item =>\r\n                            //  <Button variant=\"success\" onClick={() => goAndUpdate(item.TICKER)} >{item.TICKER}</Button>\r\n                            <OverlayTrigger overlay={<Tooltip id={`tooltip-disabled-p${item.TICKER}`}>D$: {item.deltaPreco} </Tooltip>}>\r\n                                <Button variant=\"success\" onClick={() => goAndUpdate(item.TICKER)} >{item.TICKER}</Button>\r\n                            </OverlayTrigger>\r\n                        )}\r\n\r\n                    </Carousel.Item>\r\n                    <Carousel.Item>\r\n\r\n                        <h5>Destaques MM9</h5>\r\n                        {destaqueMM9.map(item =>\r\n\r\n                            // <Button variant=\"outline-dark\" onClick={() => goAndUpdate(item.TICKER)} >{item.TICKER} </Button>\r\n                            <OverlayTrigger overlay={<Tooltip id={`tooltip-disabled-mm9${item.TICKER}`}>MM9: {item.atualPorMM9d.toFixed(4)} </Tooltip>}>\r\n                                <Button variant=\"outline-dark\" onClick={() => goAndUpdate(item.TICKER)} >{item.TICKER}</Button>\r\n                            </OverlayTrigger>\r\n                        )}\r\n\r\n                    </Carousel.Item>\r\n\r\n                    <Carousel.Item >\r\n                        <h5>Cruzou?</h5>\r\n                        {cruzou.map(item =>\r\n                            <OverlayTrigger overlay={<Tooltip id={`tooltip-disabled-mm9${item.TICKER}`}>MM9: {item.cruzamento} </Tooltip>}>\r\n                                <Button className=\"marginb\" variant=\"outline-dark\" onClick={() => goAndUpdate(item.TICKER)} >{item.TICKER}</Button>\r\n                            </OverlayTrigger>\r\n                        )}\r\n                    </Carousel.Item>\r\n\r\n                    <Carousel.Item >\r\n                        <h5>Seleção Ótima</h5>\r\n                        {fastOtimo.map(item =>\r\n                            <OverlayTrigger overlay={<Tooltip id={`tooltip-disabled-mm9${item.TICKER}`}>\r\n                                <>Pesist MM9: {(item.ascMM9 - 0.25) / 0.25}\r\n                                    <br />\r\n                                    $/MM9: {((item.atualPorMM9 - 1) * 100).toFixed(2)}%\r\n                                    <br />\r\n                                    DYNow: {item.dyNow} %\r\n                                    <br />\r\n                                    DVol: {item.deltaVol}\r\n                                </>\r\n                            </Tooltip>}>\r\n                                <Button className=\"marginb\" variant=\"outline-dark\" onClick={() => goAndUpdate(item.TICKER)} >{item.TICKER}</Button>\r\n                            </OverlayTrigger>\r\n                        )}\r\n                    </Carousel.Item>\r\n\r\n\r\n                    <Carousel.Item >\r\n                        <h5>Melhor RSI</h5>\r\n                        {melhorRSI.map(item =>\r\n                            <OverlayTrigger overlay={<Tooltip id={`tooltip-disabled-mm9${item.TICKER}`}>\r\n                                <>rsiMedia: {item.rsiMedia.toFixed(2)}\r\n                                    <br />\r\n                                    rsi: {item.rsiToNode}\r\n                                    <br />\r\n                                    rsi_storch_fast: {item.rsi_storch_fast}\r\n                                </>\r\n                            </Tooltip>}>\r\n                                <Button className=\"marginb\" variant=\"outline-dark\" onClick={() => goAndUpdate(item.TICKER)} >{item.TICKER}</Button>\r\n                            </OverlayTrigger>\r\n                        )}\r\n                    </Carousel.Item>\r\n\r\n                </Carousel>\r\n            </Row>\r\n\r\n: \"\"}\r\n            {props.tabela ?\r\n                <Container>\r\n                    <section id=\"destaqueMM9\"> </section>\r\n                    <MonttableArr tabela={destaqueMM9}\r\n                        label={'Mais próximos e acima de MM9'}\r\n                        colunas={['qotacao', 'deltaPreco', 'deltaVol', 'mm9distAbs', 'ascMM9']}\r\n                    />\r\n\r\n                    <section id=\"melhorRSI\"> </section>\r\n                    <MonttableArr tabela={melhorRSI}\r\n                        label={'Menores RSI'}\r\n                        colunas={['qotacao', 'rsiToNode', 'rsi_storch_fast', 'rsiMedia', 'rsimdeltapreco']}\r\n                    />\r\n\r\n\r\n<section id=\"lpapvp\"> </section>\r\n                    <MonttableArr tabela={lpapvp}\r\n                        label={'Melhores LPA e PVP'}\r\n                        colunas={['qotacao', 'lpaSobrePvp', 'lpa', 'pvpnow',  'dyNow', 'mm9distAbs', 'rsiMedia']}\r\n                    />\r\n\r\n                    <section id=\"otimoHold\"> </section>\r\n                    <Monttable tabela={otimoHold} label={'Longs sugeridos'} />\r\n\r\n                    <section id=\"fastOtimo\"> </section>\r\n                    <MonttableArr tabela={fastOtimo}\r\n                        label={'PVG'}\r\n                        colunas={['qotacao', 'deltaPreco', 'deltaVol', 'theGap', 'opcoesAtmSugeridas']}\r\n                    />\r\n\r\n\r\n                    <section id=\"cruzou\"> </section>\r\n                    <Monttable tabela={cruzou} label={'Cruzamentos de MM9 entre ontem e hoje.'} />\r\n\r\n                    <section id=\"destaqueVol\"> </section>\r\n                    <Monttable tabela={destaqueVol} label={'Destaques de Volume'} />\r\n\r\n                    <section id=\"destaquePrice\"> </section>\r\n                    <Monttable tabela={destaquePrice} label={'Maiores Altas'} />\r\n\r\n                    <section id=\"destaqueLowPrice\"> </section>\r\n                    <Monttable tabela={destaqueLowPrice} label={'Maiores Baixas'} />\r\n\r\n                    <section id=\"melhorFundamentos\"> </section>\r\n                    <Monttable tabela={melhorFundamentos} label={'Pontuação geral de Fundamentos'}\r\n                        exibeColuna={'pontosFundamentais'} />\r\n\r\n\r\n                    <section id=\"melhorqualPrecoFund\"> </section>\r\n                    <Monttable\r\n                        tabela={melhorqualPrecoFund}\r\n                        label={'Melhores preços segundo Fundamentos'}\r\n                        exibeColuna={'qualPrecoFund'}\r\n                        colunas={['qotacao', 'deltaPreco', 'precoPorLucro', 'lpa', 'pvpnow', 'vlrIntrinsecoPorCotacao', 'opcoesAtmSugeridas']}\r\n                    />\r\n\r\n                    <section id=\"qualSaudeFund\"> </section>\r\n                    <Monttable tabela={melhorqualSaudeFund}\r\n                        label={'Melhores em saúde conforme Fundamentos'}\r\n                        exibeColuna={'qualSaudeFund'}\r\n                    />\r\n\r\n\r\n\r\n\r\n                    <SecLink>\r\n                        <a href=\"#fastOtimo\">PVG</a>\r\n                        <a href=\"#destaqueMM9\">MM9</a>\r\n                        <a href=\"#melhorRSI\">RSI BAIXO</a>\r\n                        <a href=\"#lpapvp\">MELHOR LPA e PVP</a>\r\n                        \r\n\r\n                        <a href=\"#otimoHold\">LONG</a>\r\n                        <a href=\"#destaqueVol\">VOLUME</a>\r\n                        \r\n                        <a href=\"#cruzou\">CRUZOU</a>\r\n                        <a href=\"#destaqueLowPrice\">BAIXAS</a>\r\n                        <a href=\"#destaquePrice\">ALTAS</a>\r\n                        <a href=\"#melhorFundamentos\">FUNDAMENTOS BEST</a>\r\n                        <a href=\"#melhorqualPrecoFund\">QUALIDADE PRICE/FUND</a>\r\n                        <a href=\"#qualSaudeFund\">QUALIDADE SAUDE FUND</a>\r\n                    </SecLink>\r\n                </Container>\r\n                : \"\"}\r\n\r\n        </StDiv2>\r\n\r\n    )\r\n}\r\n\r\nexport default Destaques\r\n\r\nconst SecLink = styled.div`\r\ndisplay:flex;\r\nflex-direction:column;\r\nposition: fixed; /* Fixed/sticky position */\r\n\r\n    top: 200px; /* Place the button at the bottom of the page */\r\n    left: 30px; /* Place the button 30px from the right */\r\n\r\n    z-index: 99; /* Make sure it does not overlap */\r\n\r\n\r\n    \r\n    a{\r\n\r\n        \r\n    border: 1px rgba(05, 09, 13, 0.2) solid !important; /* Remove borders */\r\n    outline: none; /* Remove outline */\r\n    background-color: rgb(205, 209, 213)!important; /* rgb(20, 26, 40, 0.91); Set a background color */\r\n    color: black; /* Text color */\r\n    cursor: pointer !important ; /* Add a mouse pointer on hover */\r\n    padding: 5px; /* Some padding */\r\n    margin-bottom:1px;\r\n    font-size: 18px; /* Increase font size */\r\n    transition-timing-function: ease;\r\n    transition: background-color 2s;\r\n    border-top-left-radius: 3999px;\r\n    border-top-right-radius: 9999px;\r\n    border-bottom-right-radius: 9999px;\r\n    border-bottom-left-radius: 3999px;\r\n    :hover {\r\n        border: none !important;\r\n        background-color: red !important; \r\n        opacity:0.4;\r\n        \r\n    }\r\n    }\r\n\r\n`\r\n\r\n/**Div */\r\nconst StDiv2 = styled.div`\r\n\r\n/* min-height: 20vh; */\r\nmargin: 5px 0 25px 0;\r\npadding: 25px 10px 10px 20px;\r\n/* font-family: Arial, Helvetica, sans-serif; */\r\nfont-family: 'Heebo', sans-serif ;\r\nborder-radius : 5px;\r\ntd{\r\n    width: 11.11%;\r\n}\r\n\r\n.thc{\r\n    /* border-bottom: 0.5px solid white;     */\r\n    width: 11.11%;\r\n}\r\n\r\n\r\n.scroll {\r\n    border-top:0.5px solid rgb(205, 209, 213); \r\n  height: 190px;\r\n  overflow-x: hidden;\r\n  overflow-y: auto;\r\n  /* margin-top: 10px; */\r\n}\r\n\r\n.marginb{\r\n   \r\n    margin-bottom: 5px;\r\n}\r\n.centerme{\r\n   \r\n   display:flex;\r\n   align-items:center;\r\n   justify-content:center;\r\n}\r\n\r\n.carousel-indicators{\r\nborder-radius: 5px;\r\n    border: solid whitesmoke 1px  ;\r\n    background-color: rgba(0, 0, 0, 0.2);\r\n\r\n       border-top-left-radius: 9999px;\r\n    border-top-right-radius: 9999px;\r\n    border-bottom-right-radius: 9999px;\r\n    border-bottom-left-radius: 9999px;\r\nli{\r\n    height:15px;\r\n    width: 15px;\r\n    background-color:black;\r\n    border-radius: 50%;\r\n}\r\n}\r\n\r\n.carousel-item{\r\n    /* background-color: rgb(222, 226, 230); */\r\n    width: 80vw;\r\n    margin: 0 auto 0 auto;\r\n}\r\n.carousel-control-next, .carousel-control-prev{\r\nwidth: 5%;\r\n}\r\n\r\n.carousel-control-prev-icon, .carousel-control-next-icon{\r\n    background-color: rgb(0, 0, 0, 0.95);\r\n }\r\n\r\n\r\n.carousel-control-next{\r\n    right: -10px;\r\n    }\r\n\r\n.btn{\r\n    margin: 5px 5px 5px 5px;\r\n    min-width: 100px;\r\n\r\n    border-top-left-radius: 9999px;\r\n    border-top-right-radius: 9999px;\r\n    border-bottom-right-radius: 9999px;\r\n    border-bottom-left-radius: 9999px;\r\n}\r\n    \r\n\r\n    .carousel-inner{\r\n        width: 90%;\r\n        display:flex;\r\n        margin: 0 auto 0 auto;\r\n    }\r\n\r\n.carousel{\r\n    height: 45vh;  \r\n    margin: 15px 0 25px ;\r\n    margin: 0 auto 0 auto;\r\n    \r\n}\r\n\r\nh4{\r\n    margin: 0 0 0 100px ;\r\n}\r\n\r\nh5{\r\n    margin: 10px 0 10px 0 ;\r\n}\r\n\r\n.montttable{\r\n    /* border: solid rgba(10,10,10, 0.2) 1px; */\r\n    /* box-shadow: 10px black; */\r\n}\r\n`","C:\\Users\\tomaz\\personal\\src\\components\\linksgroup.js",["270"],"import React from 'react'\r\nimport { Button, Dropdown, ButtonGroup } from 'react-bootstrap'\r\nimport history from '../config/history';\r\nimport { adicionaLST } from '../util/localsthandler';\r\n\r\nconst defaulte = {\r\n\r\n}\r\n\r\nconst LinksGroup = (props) => {\r\n    return (\r\n        <Dropdown as={ButtonGroup}>\r\n            <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-split-basic\" />\r\n\r\n            <Dropdown.Menu onClick={()=>adicionaLST(props.ticker.TICKER)}>\r\n                {props.ticker.TICKER ? <>\r\n\r\n                    <Dropdown.Item>\r\n                        <Button onClick={() => history.push(`trade/${props.ticker.TICKER}`)} variant=\"link\" >   Scan   </Button>\r\n                    </Dropdown.Item>\r\n\r\n                    <Dropdown.Item\r\n                        target=\"_blank\" rel=\"noopener noreferrer\"\r\n                        href={`https://www.fundamentus.com.br/detalhes.php?papel=${props.ticker.TICKER}`}>Fundamentus</Dropdown.Item>\r\n\r\n                    <Dropdown.Item\r\n                        target=\"_blank\" rel=\"noopener noreferrer\"\r\n                        href={`https://www.tradingview.com/symbols/BMFBOVESPA-${props.ticker.TICKER}/technicals/`}>Trading View</Dropdown.Item>\r\n\r\n                    <Dropdown.Item\r\n                        target=\"_blank\" rel=\"noopener noreferrer\"\r\n                        href={`https://br.tradingview.com/chart/?symbol=BMFBOVESPA%3A${props.ticker.TICKER}`}>GraficoTRV</Dropdown.Item>\r\n\r\n                    <Dropdown.Item\r\n                        target=\"_blank\" rel=\"noopener noreferrer\"\r\n                        href={`https://twitter.com/search?q=%23${props.ticker.TICKER}&src=typed_query&f=live`}>Twitter</Dropdown.Item>\r\n\r\n                    <Dropdown.Item\r\n                        target=\"_blank\" rel=\"noopener noreferrer\"\r\n                        href={`https://statusinvest.com.br/acoes/${props.ticker.TICKER}`}>Status Invest</Dropdown.Item>\r\n\r\n                <Dropdown.Item\r\n                    target=\"_blank\" rel=\"noopener noreferrer\"\r\n                    href={`https://opcoes.net.br/opcoes/bovespa/${props.ticker.TICKER}`}>Opções Net</Dropdown.Item>\r\n\r\n\r\n\r\n                </>\r\n                    : \"\"}\r\n\r\n                <Dropdown.Item\r\n                    target=\"_blank\" rel=\"noopener noreferrer\"\r\n                    href={`https://opcoes.net.br/calculadora-Black-Scholes/${props.ticker.optTicker}`}> Black Scholes </Dropdown.Item>\r\n\r\n            </Dropdown.Menu>\r\n        </Dropdown>\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default LinksGroup\r\n","C:\\Users\\tomaz\\personal\\src\\components\\topButton.js",["271"],"import React, { useEffect, useState } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport styled from 'styled-components'\r\n\r\nconst ToTopButton = (props) => {\r\n\r\n    const [exibe, setExibe] = useState(false)\r\n    \r\n    /**Monitora a exibição do botão de subir ao topo */\r\n    function scrollFunction() {\r\n        const limite = 500\r\n        \r\n        if (document.body.scrollTop > limite || document.documentElement.scrollTop > limite) {\r\n            setExibe(true)\r\n        } else {\r\n            setExibe(false)\r\n        }\r\n      }\r\n      \r\n      /**Faz scroll ip na tela recursivamente até chegar ao topo */\r\n      const scrollToTop = () => {        \r\n        const c = document.documentElement.scrollTop || document.body.scrollTop;\r\n        if (c > 0) {\r\n          window.requestAnimationFrame(scrollToTop);\r\n          window.scrollTo(0, c - c / 8);\r\n        }\r\n      };\r\n\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', scrollFunction, true);\r\n \r\n    }, [])\r\n\r\n  return (\r\n    <Divanim>\r\n        <Btnfixed \r\n        className={exibe? \"animated fadeIn\":\"animatedOut fadeOut\" }\r\n         exibe={true} \r\n         pointer={exibe}\r\n         onClick={exibe ? ()=>scrollToTop(): \"\"}\r\n         id=\"myBtn\" >TOPO</Btnfixed>\r\n    </Divanim>\r\n  )\r\n\r\n}\r\n\r\nexport default ToTopButton\r\n\r\n\r\nconst Divanim = styled.div`\r\n         .animated {\r\n            -webkit-animation-duration: 2s;\r\n            animation-duration: 2s;\r\n            -webkit-animation-fill-mode: both;\r\n            animation-fill-mode: both;\r\n            -webkit-animation-name: fadeIn;\r\n            animation-name: fadeIn;\r\n            border: none !important;\r\n         }\r\n         \r\n         @-webkit-keyframes fadeIn {\r\n            0% {opacity: 0;}\r\n            100% {opacity: 1;}\r\n         }\r\n         \r\n         @keyframes fadeIn {\r\n            0% {opacity: 0;}\r\n            100% {opacity: 1;}\r\n        }\r\n\r\n        .animatedOut {\r\n            -webkit-animation-duration: 2s;\r\n            animation-duration: 2s;\r\n            -webkit-animation-fill-mode: both;\r\n            animation-fill-mode: both;\r\n            -webkit-animation-name: fadeOut;\r\n            animation-name: fadeOut;\r\n            border: none !important;            \r\n         }\r\n         \r\n         @-webkit-keyframes fadeOut {\r\n\r\n            0% {opacity: 1;}\r\n            100% {opacity: 0;}\r\n         }\r\n         \r\n         @keyframes fadeOut {\r\n            0% {opacity: 1;}\r\n            100% {opacity: 0;}\r\n         }\r\n        `\r\n\r\nconst Btnfixed = styled.button`\r\ndisplay:${props=> props.exibe ? `block`:`none`};\r\n    position: fixed; /* Fixed/sticky position */\r\n    bottom: 20px; /* Place the button at the bottom of the page */\r\n    right: 30px; /* Place the button 30px from the right */\r\n    z-index: 99; /* Make sure it does not overlap */\r\n    border: none !important; /* Remove borders */\r\n    outline: none; /* Remove outline */\r\n    background-color: rgb(0, 210, 40, 0.91)!important; /* rgb(20, 26, 40, 0.91); Set a background color */\r\n    color: black; /* Text color */\r\n    cursor: ${props=> props.pointer ? `pointer`:`auto`} !important ; /* Add a mouse pointer on hover */\r\n    padding: 15px; /* Some padding */\r\n    border-radius: 50%; /* Rounded corners */\r\n    font-size: 18px; /* Increase font size */\r\n    transition-timing-function: ease;\r\n    transition: background-color 2s;\r\n    :hover {\r\n        border: none !important;\r\n        background-color: #fac564 !important; \r\n        opacity:0.4\r\n    }\r\n\r\n`\r\n","C:\\Users\\tomaz\\personal\\src\\util\\formatingnumbers.js",[],["272","273"],"C:\\Users\\tomaz\\personal\\src\\components\\tabelasdestaques.js",[],"C:\\Users\\tomaz\\personal\\src\\components\\comparador.js",["274","275","276","277","278","279","280","281","282","283","284","285"],"import React, { useEffect, useState } from 'react'\r\nimport Layout from './layout/layout'\r\nimport ToTopButton from './topButton'\r\nimport { Col, Navbar, Row, Container, Table, Button, Form, OverlayTrigger, Tooltip, Carousel } from 'react-bootstrap'\r\nimport styled from 'styled-components'\r\nimport { getRealTimeRadar, } from '../services/trader'\r\nimport {localStoragem, adicionaLST} from '../util/localsthandler'\r\n\r\nconst Comparador = () => {\r\n\r\n    const [arrdecomp, setarrdecomp] = useState([])\r\n    const [fullData, setFullData] = useState([])\r\n\r\n    const [aaObjeto, setAaObjeto] = useState({})\r\n    const [bbObjeto, setBbObjeto] = useState({})\r\n\r\n\r\n    const [aatString, setAatString] = useState(\"\")\r\n    const [bbtString, setBbtString] = useState(\"\")\r\n\r\n\r\n    const menorVence = [\r\n        \"DivBrutPatrim\", \"rsiToNode\", \"dividaLiqToNode\", \"precoPorLucro\", \"mm9distAbs\",\r\n        \"rsi_storch_fast\", \"rsiMedia\", \"rsimdeltapreco\", \"ascMM9\", \"pvpnow\"\r\n    ]\r\n\r\n    const maiorVence = [\r\n        \"pontosTecnicos\", \"vlrIntrinsecoPorCotacao\", \"dyNow\", \"pontosFundamentais\", \"liqCorr\", \"margemEbit\",\r\n        \"margemLiquida\", \"roe\", \"qualPrecoFund\", \"qualSaudeFund\", \"pontosSoma\", \"lpa\",\"lpaMenosPvp\"\r\n    ]\r\n\r\n    const carregarUm = () => {\r\n       \r\n        const getdataOne = getRealTimeRadar()\r\n            .then((res) => {\r\n                setFullData(res.data)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        // return () => {\r\n        carregarUm()\r\n        // };\r\n    }, [])\r\n\r\n\r\n    const filtrarDupla = () => {\r\n\r\n        let a = fullData.filter(item => item.TICKER == aatString)[0]\r\n        let b = fullData.filter(item => item.TICKER == bbtString)[0]\r\n        adicionaLST(aatString, bbtString)\r\n        setAaObjeto(a)\r\n        setBbObjeto(b)\r\n\r\n    }\r\n\r\n\r\n    const quemVence = (valuea, valueb, me, par) => {\r\n        let ref;\r\n\r\n        if (valuea == valueb) {\r\n            return false\r\n        } else if (menorVence.includes(par)) {\r\n            ref = Math.min(valuea, valueb)\r\n        } else if (maiorVence.includes(par)) {\r\n            ref = Math.max(valuea, valueb)\r\n        }\r\n\r\n        return me == ref\r\n    }\r\n\r\n    const makearr = (ara, arb) => {\r\n        let arrc = []\r\n        \r\n        let u = []\r\n        for (const [key, value] of Object.entries(ara)) {\r\n            arrc.push([key, value, arb[key]])\r\n            // u.push(key)\r\n        }\r\n        // console.log(JSON.stringify(u))\r\n        setarrdecomp(arrc)\r\n    }\r\n\r\n    useEffect(() => {\r\n        makearr(aaObjeto, bbObjeto)\r\n    }, [aaObjeto, bbObjeto])\r\n\r\n\r\n    const handleChange = (attr) => {\r\n        const { value, name } = attr.target\r\n\r\n        name === \"aticker\" ? setAatString(value.toUpperCase()) : setBbtString(value.toUpperCase())\r\n\r\n    }\r\n\r\n    // const adicionaLST = (a, b)=>{\r\n\r\n    //     localStoragem(\"SAVE\", \"VISITADAS\", [a, b] )\r\n    // }\r\n    \r\n\r\n    \r\n    useEffect(() => {\r\n\r\n        let atual = []\r\n        const vis = JSON.parse( localStoragem('GET', 'VISITADAS'))\r\n\r\nif (vis){\r\n        atual = [...vis,\"\"]\r\n}else{\r\natual = [\"\", \"\"]\r\n}\r\n        setAatString(atual[0] )\r\n        setBbtString(atual[1] )\r\n    }, [])\r\n\r\n    return (\r\n        <Container>\r\n            <Layout header={`Comparador`}>\r\n\r\n                <h4> Comparador </h4>\r\n\r\n\r\n                <Encapsulador>                  \r\n                   \r\n\r\n                    <STTable striped bordered hover >\r\n                        <thead>\r\n                            <th>\r\n                            \r\n                            {/* <Button onClick={() => adicionaLST(aatString , bbObjeto)} variant='secondary' > adicionaLST </Button> */}\r\n                                <Button onClick={() => filtrarDupla()} > Makearr </Button>\r\n                            </th>\r\n                            <th>\r\n                                <Form.Control className=\"heebof\" type=\"text\" onChange={handleChange} name=\"aticker\" value={aatString.toUpperCase() || \"\"} />\r\n                            </th>\r\n                            <th>\r\n                                <Form.Control className=\"heebof\" type=\"text\" onChange={handleChange} name=\"bticker\" value={bbtString.toUpperCase() || \"\"} />\r\n                            </th>\r\n                        </thead>\r\n\r\n                        <tbody className=\"no-scroll\">\r\n                            {arrdecomp.map(item =>\r\n\r\n                                <Trow>\r\n                                    <td className=\"thc\"> {item[0]} </td>\r\n                                    <td className={quemVence(item[1], item[2], item[1], item[0]) ? \"verde\" : \"\"}> {item[1]} </td>\r\n                                    <td className={quemVence(item[1], item[2], item[2], item[0]) ? \"verde\" : \"\"}> {item[2]} </td>\r\n                                </Trow>\r\n                            )}\r\n                        </tbody>\r\n\r\n                    </STTable>\r\n\r\n\r\n                </Encapsulador>\r\n\r\n                <ToTopButton />\r\n            </Layout>\r\n        </Container>\r\n    )\r\n\r\n}\r\nexport default Comparador\r\n\r\nconst Encapsulador = styled.div`\r\nheight:75vh;\r\n.xbtn{\r\n    padding: 3px 1px 1px 2px;\r\n    margin: 5px 5px 5px 5px;\r\n    width: 100px;\r\n    height: 40px;\r\n    border: solid 1px black;\r\n    border-top-left-radius: 9999px;\r\n    border-top-right-radius: 9999px;\r\n    border-bottom-right-radius: 9999px;\r\n    border-bottom-left-radius: 9999px;\r\n\r\n.innerBtn{\r\n    /* margin: 5px 5px 5px 5px; */\r\n    width: 33%;\r\n    height: 90%;\r\n    border: solid 1px black;\r\n    border-radius: 50%;\r\n}\r\n}\r\n`\r\n\r\n\r\nconst Trow = styled.tr`\r\nth, td{\r\n    text-align:center;\r\n}\r\n.verde{\r\n    background-color: #28a745; \r\n}\r\n`\r\n\r\nexport const STTable = styled(Table)`\r\n\r\ntable {\r\n  width: 100%;\r\n  \r\n}\r\n\r\nth{\r\n    text-align:center;\r\n}\r\n\r\n\r\n\r\nthead, tbody tr {\r\n  display: table;\r\n  width: 100%;\r\n  table-layout: fixed;\r\n}\r\n\r\ntbody {\r\n  display: block;\r\n  overflow-y: auto;\r\n  table-layout: fixed;\r\n  /* max-height: 700px; */\r\n  height:65vh;\r\n}\r\n\r\n.no-scroll {\r\n  -ms-overflow-style: none; /* IE and Edge */\r\n  scrollbar-width: none; /* Firefox */\r\n}\r\n.no-scroll::-webkit-scrollbar {\r\n  display: none; /* Chrome, Safari and Opera */\r\n}\r\n\r\n\r\n    \r\n`","C:\\Users\\tomaz\\personal\\src\\components\\calculadora.js",["286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306"],"import React, { useEffect, useState } from 'react'\r\nimport { Col, Modal, Row, Container, Table, Button, Form, Spinner } from 'react-bootstrap'\r\nimport { getCalocOneOpcao, getFullData, getOpcoesDe, getRealTimeRadar } from '../services/trader'\r\nimport { saveToLocal } from '../util/savelocalCalc'\r\nimport Layout from './layout/layout'\r\nimport { useParams } from 'react-router-dom'\r\nimport { StDiv } from './trade'\r\nimport {localStoragem, adicionaLST} from '../util/localsthandler'\r\nimport { dadosuteis } from '../util/dadosUteis.js'\r\nimport ToTopButton from './topButton'\r\nimport { param } from 'jquery'\r\n\r\nconst Calculadora = () => {\r\n\r\n    const { paper } = useParams()\r\n    const [ticker, setTicker] = useState({ ticker: \"loading\" })\r\n    const [opcaoData, setOpcaoData] = useState({ ticker: paper ? paper.toUpperCase() :  \"\" })\r\n    const [allOptionsDe, setallOptionsDe] = useState([])\r\n    const [allOptionsDeFiltrada, setallOptionsDeFiltrada] = useState([])\r\n\r\n    const [fullData, setFullData] = useState({\r\n        fulldata: \"setFullData\",\r\n        radarRealtime: {\r\n            qotacao: 0\r\n        }\r\n    })\r\n\r\n    const dummyFiltros ={\r\n        filtros: \"setFiltros\",\r\n        fm: false,\r\n        vencimentos: [],\r\n        currentVencimento: ''\r\n    }\r\n\r\n    const [filtros, setFiltros] = useState(dummyFiltros)\r\n\r\nconst dummyresultado = {\r\n    todo: \"Todo\",\r\n    premioOpcao: 0,\r\n    premioBase: 0\r\n}\r\n\r\n    const [resultado, setsResultado] = useState(dummyresultado)\r\n\r\n    const [calculando, setcalculando] = useState(false);\r\n\r\n\r\n    const aplicarFiltro = () => {\r\n        console.log(\"chamada aplicar filtro\", filtros)\r\n        let temp = allOptionsDe\r\n\r\n        if (filtros.marketMaker) {\r\n            temp = temp.filter(item => item.marketMaker === filtros.marketMaker)\r\n        }\r\n\r\n        if (filtros.currentVencimento) {\r\n            temp = temp.filter(item => filtros.currentVencimento.includes(item.vencimento))\r\n        }\r\n\r\n\r\n        setallOptionsDeFiltrada(temp)\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        aplicarFiltro()\r\n\r\n    }, [filtros])\r\n\r\n\r\n\r\n    const handleChange = (attr) => {\r\n        const { value, name } = attr.target\r\n        setOpcaoData({\r\n            ...opcaoData,\r\n            [name]: value.replace(\",\", \".\").toUpperCase()\r\n        })\r\n    }\r\n\r\n\r\n    const btnset = (attr) => {\r\n\r\n        resetData()\r\n\r\n        setOpcaoData({\r\n            ...opcaoData,\r\n            ticker: attr.replace(\",\", \".\").toUpperCase()\r\n        })\r\n    }\r\n\r\n\r\n    useEffect(\r\n        () => {\r\n            if (param) {\r\n                getdataOfAtivo()\r\n            }\r\n        }\r\n        , [])\r\n\r\n\r\n    const enterKeyPressed = (event) => {\r\n\r\n        if (event.key == 'Enter') {\r\n            resetData()\r\n            getdataOfAtivo()\r\n\r\n        }\r\n    }\r\n\r\nconst resetData = () => {\r\n    setsResultado(dummyresultado)\r\n    setTicker({ ticker: \"loading\" })\r\n    // setFiltros(dummyFiltros)\r\n}\r\n\r\n    const getdataOfAtivo = async () => {\r\n\r\n        let filtrar = opcaoData.ticker.substring(0, 4) || opcaoData.ativoTicker\r\n\r\n        const ativo = dadosuteis.arrlistaTikersOpcoes\r\n            .filter(item => item.includes(filtrar))[0]\r\n\r\n        if (ativo) {\r\n            adicionaLST(ativo.toUpperCase())\r\n            const getdataOne = await getFullData({ TICKER: ativo })\r\n\r\n                .then((res) => setFullData(res.data))\r\n                .catch(res => alert('Erro em busca fulldata' + res))\r\n\r\n            await PegaTodosOpcoesDe(ativo)\r\n           \r\n        } else {\r\n            setFullData({\r\n                ...fullData,\r\n                erro: `Erro para ${opcaoData.ticker.substring(0, 4)}`\r\n            })\r\n        }\r\n    }\r\n    useEffect(\r\n        () => {\r\n            if (fullData) {\r\n                setOpcaoData({\r\n                    ...opcaoData,\r\n                    fechamentoAnterior: fullData.radarRealtime.fechamentoAnterior\r\n                })\r\n            }\r\n        }\r\n        , [fullData])\r\n\r\n    const PegaTodosOpcoesDe = async (ativo) => {\r\n        setcalculando(true)\r\n        const getdataOneOption = await getOpcoesDe({ optTicker: opcaoData.ticker.toUpperCase() })\r\n        if (getdataOneOption.data.length > 0) {\r\n            setTicker(getdataOneOption.data[0])\r\n        }\r\n\r\n\r\n\r\n        //Pega todas  opções correlacionadas\r\n        const getdataOneAllOptions = await getOpcoesDe({ acao: ativo.toUpperCase() })\r\n            .then((res) => {\r\n\r\n\r\n                res.data = res.data.sort(function (a, b) {\r\n                    if (a.strike > b.strike) {\r\n                        return 1;\r\n                    }\r\n                    if (a.strike < b.strike) {\r\n                        return -1;\r\n                    }\r\n                    return 0;\r\n                })\r\n\r\n                //Armazena os vencimentos das opções obtidas\r\n\r\n                let tempVencimentos = []\r\n                res.data.map(item => {\r\n                    if (tempVencimentos.indexOf(item.vencimento) === -1) {\r\n                        tempVencimentos.push(item.vencimento);\r\n                    }\r\n                })\r\n\r\n\r\n                tempVencimentos = tempVencimentos.sort(function (a, b) {\r\n                    if (a > b) {\r\n                        return 1;\r\n                    }\r\n                    if (a < b) {\r\n                        return -1;\r\n                    }\r\n                    return 0;\r\n                })\r\n\r\n\r\n                setFiltros({\r\n                    ...filtros,\r\n                    vencimentos: tempVencimentos\r\n                })\r\n\r\n               \r\n                setallOptionsDe(res.data)\r\n\r\n                setallOptionsDeFiltrada(res.data)\r\n            })\r\n\r\n\r\n            .catch(res => alert('Erro em busca allOptionsDe' + res))\r\n            .finally(() => setcalculando(false))\r\n\r\n    }\r\n\r\n    const calculaUmaOpcao = async () => {\r\n\r\n\r\n        if (!opcaoData.cotacao) {\r\n            alert(\"Necessita informar Cotação do ativo a simular\")\r\n            return\r\n        }\r\n\r\n\r\n\r\n        // const fechamentoAnterior = fullData.yahoofinance.Fechamento\r\n        const kueri = {\r\n            cotacao: opcaoData.cotacao,\r\n            ticker: opcaoData.ticker,\r\n            // ativoTicker : opcaoData.ativoTicker, \r\n            cotacaoBase: fullData.radarRealtime.qotacao,\r\n            fechamentoAnterior: opcaoData.fechamentoAnterior\r\n        }\r\n\r\n      \r\n        setcalculando(true)\r\n        const result = await getCalocOneOpcao(kueri)\r\n            .then(res => {\r\n                setsResultado(res.data)\r\n            })\r\n            .catch(res => {\r\n            \r\n                setsResultado({ erro: res.response.data })\r\n            })\r\n            .finally(res => {\r\n                setcalculando(false)\r\n            })\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Layout header={`Calculadora`}>\r\n                <StDiv>\r\n                    <Container>\r\n\r\n                        <h4> Calculadora de prêmios estimados de opções - Black Scholes </h4>\r\n                        <br />\r\n                        <Row sm={12}>\r\n                            <Col sm=\"4\">\r\n\r\n                                <Row >\r\n                                    <Col>Ticker da opção </Col>\r\n                                    <Col sm={7}>\r\n                                        <Form.Control\r\n                                            onKeyPress={enterKeyPressed}\r\n                                            type=\"text\" onChange={handleChange}\r\n                                            className=\"heebof\"\r\n                                            name=\"ticker\"\r\n                                            placeholder=\"ticker da opção\"\r\n                                            value={opcaoData.ticker || \"\"} />\r\n\r\n\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <br />\r\n                                <Row >\r\n                                    <Col>Fechamento anterior do Ativo </Col>\r\n                                    <Col sm={7}>\r\n                                        <Form.Control\r\n\r\n                                            type=\"text\"\r\n                                            disabled={true}\r\n\r\n                                            className=\"heebof\"\r\n                                            name=\"fechamentoAnterior\"\r\n                                            placeholder=\"Cotação ativo dia anterior\"\r\n                                            value={opcaoData.fechamentoAnterior} />\r\n                                    </Col>\r\n                                </Row>\r\n                                <br />\r\n                                <Row >\r\n                                    <Col>Cotação agora (Realtime Radar) </Col>\r\n                                    <Col sm={7}>\r\n                                        <Form.Control\r\n\r\n                                            type=\"text\"\r\n                                            disabled={true}\r\n\r\n                                            className=\"heebof\"\r\n                                            name=\"fechamentoAnterior\"\r\n                                            placeholder=\"Cotação ativo dia anterior\"\r\n                                            value={fullData.radarRealtime.qotacao} />\r\n                                    </Col>\r\n                                </Row>\r\n\r\n\r\n\r\n\r\n                                <br />\r\n\r\n                                <Row >\r\n                                    <Col>Cotação do ativo a simular </Col>\r\n                                    <Col sm={7}>\r\n                                        <Form.Control\r\n                                            onKeyPress={enterKeyPressed}\r\n                                            type=\"text\"\r\n                                            onChange={handleChange}\r\n                                            className=\"heebof\"\r\n                                            name=\"cotacao\"\r\n                                            placeholder=\"Cotação do ativo a simular\"\r\n                                            value={opcaoData.cotacao || \"\"} />\r\n                                    </Col>\r\n                                </Row>\r\n\r\n\r\n\r\n                                <br />\r\n\r\n                                <Button onClick={calculaUmaOpcao}> Calcular </Button>\r\n\r\n\r\n\r\n\r\n                            </Col>\r\n\r\n\r\n\r\n\r\n\r\n                            <Col sm=\"4\">\r\n                                {ticker.ativoPai ?\r\n                                    <>\r\n                                        <p>Ativo: {ticker.ativoPai}</p>\r\n                                        <p>Ticker: {ticker.optTicker}</p>\r\n                                        <p>Tipo: {ticker.tipo}</p>\r\n                                        <p>Vencimento: {ticker.vencimento}</p>\r\n                                        <p>Strike: {ticker.strike}</p>\r\n                                        <p className={ticker.marketMaker ? \"green\" : \"red\"}  >Formador de Mercado: {ticker.marketMaker ? \"SIM\" : \"NÃO\"}</p>\r\n                                        <p className={ticker.estilo == \"AMER\" ? \"green\" : \"red\"} >Estilo: {ticker.estilo}</p>\r\n                                        <p>Último preço: {ticker.lastPric ? ticker.lastPric : \"N/A\"}</p>\r\n                                    </>\r\n                                    : \"\"}\r\n                            </Col>\r\n\r\n                            <Col sm=\"4\">\r\n\r\n                                <Row>\r\n\r\n                                    {calculando ? <Spinner animation=\"border\" size=\"sm\" /> :\r\n                                        <>\r\n                                            {fullData.erro ? `Ativo para a opção ${opcaoData.ticker} não localizado` :\r\n                                                <>\r\n                                                    {Object.keys(resultado).length > 3 ?\r\n                                                        <div>\r\n                                                            <h4>Resultado para Opção  {resultado.ticker} : </h4>\r\n                                                            <h4 className=\"btn-primary\" >Prêmio Calculado: {resultado.premioOpcao.toFixed(2)}</h4>\r\n                                                            <p> Cotação usada na simulação : {resultado.cotacaoFim}</p>\r\n                                                            <hr />\r\n                                                            <p>Cotação Now: {fullData.radarRealtime.qotacao} </p>\r\n                                                            <p>Premio para cotação Now: {resultado.premioBase.toFixed(2)}</p>\r\n                                                            <hr />\r\n                                                            <p> Último prêmio do pregão anterior: {resultado.lastPremiox}</p>\r\n                                                            <p> Fechamento Anterior do Ativo: {resultado.fechamentoAnterior}</p>\r\n\r\n                                                        </div>\r\n                                                        : <h4>Preencha os campos livres à esquerda e clique em calcular. O resultado aparecerá aqui.</h4>}\r\n                                                </>\r\n                                            }\r\n                                        </>\r\n                                    }\r\n                                </Row>\r\n\r\n\r\n                            </Col>\r\n\r\n\r\n                        </Row>\r\n                        <hr />\r\n                        <Row>\r\n                            <Col sm=\"2\">\r\n                                <Button\r\n                                    variant={filtros.marketMaker ? \"success\" : \"outline-success\"}\r\n                                    block\r\n                                    onClick={() => {\r\n                                        setFiltros({ ...filtros, marketMaker: !filtros.marketMaker })\r\n                                    }\r\n                                    }> Formador de Mercado </Button>\r\n\r\n                                <Button\r\n                                    block\r\n                                    variant={!filtros.currentVencimento ? \"success\" : \"outline-success\"}\r\n                                    onClick={() => {\r\n                                        setFiltros({ ...filtros, currentVencimento: \"\" })\r\n                                    }\r\n                                    }> R Vencto </Button>\r\n\r\n                            </Col>\r\n                            <Col sm=\"10\">\r\n                                {calculando ? <Spinner animation=\"border\" size=\"sm\" /> :\r\n                                    <>\r\n\r\n                                        {filtros.vencimentos.map((item, index) =>\r\n                                            <Button\r\n                                                onClick={() => {\r\n                                                    setFiltros({ ...filtros, currentVencimento: item })\r\n                                                }}\r\n                                                variant={filtros.currentVencimento == item ? \"success\" : \"outline-success\"}\r\n                                                key={index}\r\n                                                value={item}>\r\n                                                {item}\r\n                                            </Button>\r\n                                        )}\r\n                                    </>}\r\n                            </Col>\r\n\r\n                        </Row>\r\n\r\n                        <hr />\r\n                        <br />\r\n\r\n                        <h5>Todas opções correlatas: {allOptionsDe.length} </h5>\r\n                        <br />\r\n\r\n                        <Row>\r\n                            <Col>\r\n                                <h5>Calls</h5>\r\n                                <div className=\"scroll\">\r\n                                    {calculando ? <Spinner animation=\"border\" size=\"sm\" /> : \"\"}\r\n                                    {allOptionsDeFiltrada.filter(item => item.tipo.includes(\"CALL\")).map((item, i) =>\r\n                                        <Row key={i}>\r\n                                            <Button\r\n                                                onClick={() => btnset(item.optTicker)}\r\n                                                variant={item.marketMaker ? \"success\" : \"secondary\"} > {item.optTicker} </Button>\r\n                                            <p className={fullData.radarRealtime.qotacao >= item.strike ? \"green bold\" : \"\"}>\r\n                                                {item.marketMaker ? \"FM_OK\" : \"NO_FM\"}\r\n                                             // {item.strike.toFixed(2)}\r\n                                             // {item.vencimento}\r\n                                             //{item.optTicker}\r\n                                            </p>\r\n\r\n                                        </Row>\r\n                                    )}\r\n                                </div>\r\n                            </Col>\r\n\r\n                            <Col>\r\n                                <h5>Puts</h5>\r\n\r\n                                <div className=\"scroll\">\r\n                                    {calculando ? <Spinner animation=\"border\" size=\"sm\" /> : \"\"}\r\n                                    {allOptionsDeFiltrada.filter(item => item.tipo.includes(\"PUT\")).map((item, i) =>\r\n\r\n                                        <Row key={i}>\r\n                                            <Button\r\n                                                onClick={() => btnset(item.optTicker)}\r\n                                                variant={item.marketMaker ? \"success\" : \"secondary\"} > {item.optTicker} </Button>\r\n                                            <p className={fullData.radarRealtime.qotacao <= item.strike ? \"green bold\" : \"\"}> \r\n                                            {item.marketMaker ? \"FM_OK\" : \"NO_FM\"} //\r\n                                             {item.strike.toFixed(2)} // \r\n                                             {item.vencimento} // \r\n                                             {item.optTicker}</p>\r\n\r\n                                        </Row>\r\n\r\n                                    )}\r\n                                </div>\r\n                            </Col>\r\n\r\n\r\n\r\n\r\n\r\n                        </Row>\r\n\r\n                    </Container>\r\n                </StDiv>\r\n                <ToTopButton />\r\n            </Layout>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Calculadora\r\n","C:\\Users\\tomaz\\personal\\src\\util\\savelocalCalc.js",[],"C:\\Users\\tomaz\\personal\\src\\util\\dadosUteis.js",[],"C:\\Users\\tomaz\\personal\\src\\components\\quadro.js",["307","308","309","310","311","312","313","314"],"import React, { useEffect, useState } from 'react'\r\nimport { Col, Row, Container, Button, Form, OverlayTrigger, Tooltip } from 'react-bootstrap'\r\nimport styled from 'styled-components'\r\nimport { getRealTimeRadar } from '../services/trader'\r\nimport Layout from './layout/layout'\r\nimport { StDiv } from './trade'\r\nimport { adicionaLST} from '../util/localsthandler'\r\n\r\nconst Quadro = () => {\r\n    // const [fullData, setFullData] = useState(acao.opcoesAtmListCalculadas)\r\n\r\n    const [noroeste, setNoroeste] = useState([])\r\n    const [nordeste, setNordeste] = useState([])\r\n\r\n    const [main, setMain] = useState(\"PETR4\")\r\n\r\n    const [mainObject, setMainObject] = useState({})\r\n\r\n    const [sudoeste, setSudoeste] = useState([])\r\n    const [sudeste, setSudeste] = useState([])\r\n\r\n    const [fields, setFields] = useState({\r\n        oeste: \"pontosTecnicos\",\r\n        leste: \"pontosFundamentais\"\r\n    })\r\n\r\n    const [flag, setFlag] = useState(\"\")\r\n\r\n    const [mesmoSetor, setMesmoSetor] = useState(false)\r\n\r\n    const ssetFlag = (item) => {\r\n\r\n\r\n        if (flag === item) {\r\n            setFlag(\"\")\r\n            setMain(item)\r\n            // carregarUm()\r\n        } else {\r\n            setFlag(item)\r\n\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            carregarUm()\r\n        }, [fields.oeste, fields.leste, mesmoSetor, flag])\r\n\r\n\r\n    const carregarUm = () => {\r\n\r\n\r\n        const getdataOne = getRealTimeRadar()\r\n            .then((res) => {\r\n\r\n\r\n                loadKeys(res.data[0])\r\n                let mainlocal = res.data.filter(item => item.TICKER == main)[0]\r\n      \r\n                if (!mainlocal) {\r\n                    alert(`Papel ${main} não existe no radar`)\r\n                    return\r\n                }\r\n\r\n                setMainObject(mainlocal)\r\n\r\n                if (mesmoSetor) {\r\n                    res.data = res.data.filter(item => item.setor === mainlocal.setor)\r\n                }\r\n\r\n                //LADO OESTE                \r\n                let filtroNorOeste = res.data.filter(item => item[fields.oeste] > mainlocal[fields.oeste])\r\n                setNoroeste(filtroNorOeste)\r\n\r\n                let filtroSudOeste = res.data.filter(item => item[fields.oeste] < mainlocal[fields.oeste])\r\n                setSudoeste(filtroSudOeste)\r\n\r\n\r\n\r\n                //LESTE\r\n                let filtroNordeste = res.data.filter(item => item[fields.leste] > mainlocal[fields.leste])\r\n                setNordeste(filtroNordeste)\r\n\r\n                let filtroSudeste = res.data.filter(item => item[fields.leste] < mainlocal[fields.leste])\r\n                setSudeste(filtroSudeste)\r\n\r\n\r\n            })\r\n\r\n    }\r\n    const [chaves, setChaves] = useState([])\r\n    const handleChange = (attr) => {\r\n        const { value, name } = attr.target\r\n\r\n        setMain(value.toUpperCase())\r\n\r\n    }\r\n\r\n    const enterKeyPressed = (event) => {\r\n\r\n        if (event.key == 'Enter') {\r\n            carregarUm()\r\n            adicionaLST(main)\r\n        }\r\n    }\r\n\r\n    const handleChangeKeys = (attr) => {\r\n        const { value, name } = attr.target\r\n\r\n        setFields(\r\n            {\r\n                ...fields,\r\n                [name]: value\r\n            })\r\n\r\n    }\r\n\r\n    /** Não carrega chaves que são texto */\r\n    const loadKeys = (objeto) => {\r\n        for (const [key, value] of Object.entries(objeto)) {\r\n            if (!isNaN(parseInt(value))) {\r\n                if (!chaves.includes(key)) {\r\n                    chaves.push(key)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const CampoOeste = () => {\r\n        return (\r\n            <Form.Group >\r\n                <Form.Control as=\"select\" custom name=\"oeste\" onChange={handleChangeKeys} value={fields.oeste}>\r\n\r\n                    {chaves.map((chave, i) => (\r\n                        <option key={i} value={chaves[i]}> {chave} </option>\r\n                    ))}\r\n                </Form.Control>\r\n            </Form.Group>\r\n        )\r\n    }\r\n\r\n    const CampoLeste = () => {\r\n        return (\r\n            <Form.Group >\r\n                <Form.Control as=\"select\" custom name=\"leste\" onChange={handleChangeKeys} value={fields.leste}>\r\n\r\n                    {chaves.map((chave, i) => (\r\n                        <option key={i} value={chaves[i]}> {chave} </option>\r\n                    ))}\r\n                </Form.Control>\r\n            </Form.Group>\r\n        )\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Layout header={`Quadro`} footer={`Footer Quadro`}>\r\n                <StDiv>\r\n                    <Container fluid>\r\n\r\n\r\n                        <Row>\r\n\r\n                            <Col>\r\n                                <Square>\r\n                                    {noroeste.map((item, index) =>\r\n                                        <Button\r\n                                            onContextMenu={() => ssetFlag(item.TICKER)}\r\n                                            onClick={() => ssetFlag(item.TICKER)}\r\n                                            variant={item.TICKER === flag ? \"success\" : \"secondary\"}\r\n                                            key={index}>\r\n                                            {item.TICKER} / {item[fields.oeste].toFixed(2)}\r\n                                        </Button>\r\n\r\n                                    )}\r\n\r\n                                </Square>\r\n                            </Col>\r\n\r\n                            <Col>\r\n                                <Square>\r\n                                    {nordeste.map((item, index) =>\r\n                                        <Button\r\n                                            onClick={() => ssetFlag(item.TICKER)}\r\n                                            variant={item.TICKER === flag ? \"success\" : \"secondary\"}\r\n                                            key={index}>\r\n                                            {item.TICKER}  / {item[fields.leste]}\r\n                                        </Button>)}\r\n                                </Square>\r\n                            </Col>\r\n\r\n                        </Row>\r\n\r\n\r\n                        <Envolve>\r\n\r\n                            <Col>\r\n                                <CampoOeste />\r\n                            </Col>\r\n                            <Col xs=\"1\">\r\n                                <Form.Control disabled type=\"text\" name=\"aticker\" value={mainObject[fields.oeste] || \"0\"} />\r\n                            </Col>\r\n                            <Col xs=\"auto\">\r\n                                <Button onClick={() => setMesmoSetor(!mesmoSetor)}\r\n                                    variant={mesmoSetor ? \"primary\" : \"success\"}>\r\n                                    {mesmoSetor ? \"Todos Setores\" : \"Mesmo Setor\"}\r\n                                </Button>\r\n                            </Col>\r\n                            <Col xs=\"auto\">\r\n                                <Form.Control\r\n                                    className=\"heebof\"\r\n                                    type=\"text\"\r\n                                    onChange={handleChange}\r\n                                    onKeyPress={enterKeyPressed}\r\n                                    name=\"aticker\"\r\n                                    value={main || \"\"} />\r\n\r\n                            </Col>\r\n\r\n                            <Col xs=\"auto\">\r\n                                <Button onClick={carregarUm} variant=\"primary\"> Pesquisar</Button>\r\n                            </Col>\r\n\r\n                            <Col xs=\"1\">\r\n                                <Form.Control disabled type=\"text\" name=\"aticker\" value={mainObject[fields.leste] || \"0\"} />\r\n                            </Col>\r\n                            <Col>\r\n                                <CampoLeste />\r\n                            </Col>\r\n\r\n                        </Envolve>\r\n\r\n\r\n                        <Row>\r\n                            <Col>\r\n                                <Square>\r\n                                    {sudoeste.map((item, index) =>\r\n                                        <Button\r\n                                            onClick={() => ssetFlag(item.TICKER)}\r\n                                            variant={item.TICKER === flag ? \"success\" : \"secondary\"}\r\n                                            key={index}>\r\n                                            {item.TICKER} / {item[fields.oeste].toFixed(2)}\r\n                                        </Button>)}\r\n                                </Square>\r\n                            </Col>\r\n\r\n                            <Col>\r\n                                <Square>\r\n                                    {sudeste.map((item, index) => <Button\r\n                                        onClick={() => ssetFlag(item.TICKER)}\r\n                                        variant={item.TICKER === flag ? \"success\" : \"secondary\"}\r\n                                        key={index}>\r\n                                        {item.TICKER}  / {item[fields.leste].toFixed(2)}\r\n                                    </Button>)}\r\n                                </Square>\r\n                            </Col>\r\n\r\n                        </Row>\r\n\r\n\r\n                    </Container>\r\n\r\n                </StDiv>\r\n\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Quadro\r\n\r\n\r\nconst Square = styled.div`\r\npadding-top : 5px;\r\nborder-radius: 5px;\r\nborder:0.5px solid rgb(205, 209, 213); \r\nheight: 38vh;\r\noverflow-x: hidden;\r\noverflow-y: auto;\r\nwidth: 100%;\r\nmargin: 0px 0 15px 0;\r\njustify-content: center;\r\nbutton{\r\n    min-width: 120px;\r\n    border-top-left-radius: 9999px;\r\n    border-top-right-radius: 9999px;\r\n    border-bottom-right-radius: 9999px;\r\n    border-bottom-left-radius: 9999px;\r\n}\r\n/* box-shadow: 5px 5px 5px 5px rgb(205, 209, 213) ; */\r\n\r\n`\r\n\r\nconst Envolve = styled(Row)`\r\nborder-radius: 5px;\r\npadding : 10px 0 1px 0;\r\nmargin: 0.5px 0.5px 10.5px 0.5px;\r\nbackground-color : rgb( 0, 0, 0, .67);\r\nborder:0.5px solid rgb(205, 209, 213); \r\n`","C:\\Users\\tomaz\\personal\\src\\components\\pvg.js",["315","316","317","318","319","320","321"],"\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport styled from 'styled-components'\r\nimport { getRealTimeRadar } from '../services/trader';\r\nimport history from '../config/history';\r\n\r\nconst Pvgalert = (props) => {\r\n\r\n    const [exibe, setExibe] = useState([])\r\n\r\n    const carregarUm = () => {\r\n\r\n        const getdataOne = getRealTimeRadar()\r\n            .then((res) => {\r\n\r\n               \r\n                const filtrado = res.data.filter(item => item.theGap > 0.005)\r\n                    .filter(item => item.deltaVol > 0.9)\r\n                    .filter(item => item.deltaPreco > 0.01)\r\n\r\n                setExibe(filtrado)\r\n\r\n            })\r\n\r\n    }\r\n\r\n\r\n    const  Notifications = {\r\n        requestPermission: function(callback) {\r\n            window.webkitNotifications.requestPermission(callback);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        carregarUm()        \r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (!(\"Notification\" in window)) {\r\n            console.log(\"This browser does not support desktop notification\");\r\n          } else {\r\n            Notification.requestPermission();\r\n          }        \r\n    }, [])\r\n\r\n    function notifyMe() {\r\n \r\n        // Let's check if the browser supports notifications\r\n        if (!(\"Notification\" in window)) {\r\n          alert(\"This browser does not support desktop notification\");\r\n        }\r\n      \r\n        // Let's check whether notification permissions have already been granted\r\n        else if (Notification.permission === \"granted\") {\r\n          // If it's okay let's create a notification\r\n          var notification = new Notification(\"Hi there!\");\r\n        }\r\n      \r\n        // Otherwise, we need to ask the user for permission\r\n        else if (Notification.permission !== \"denied\") {\r\n          Notification.requestPermission().then(function (permission) {\r\n            // If the user accepts, let's create a notification\r\n            if (permission === \"granted\") {\r\n              var notification = new Notification(\"Hi there!\");\r\n            }\r\n          });\r\n        }\r\n      \r\n        // At last, if the user has denied notifications, and you\r\n        // want to be respectful there is no need to bother them any more.\r\n      }\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            carregarUm() \r\n        }, 60 * 1000);\r\n        return () => clearInterval(interval);\r\n      }, []);\r\n\r\n    const verPapeis = () => {\r\n        const exibed = exibe.map(item => { return item.TICKER })\r\n        // history.push('/tabelasdestaques#fastOtimo')\r\n        alert(exibed.join(\"; \"))\r\n    }\r\n\r\n    return (\r\n        <>\r\n        { exibe.length > 0 ?\r\n                <Divanim>\r\n                    <Btnfixed\r\n                        className={exibe.length > 0 ? \"animated fadeIn\" : \"animatedOut fadeOut\"}\r\n                        exibe={true}\r\n                        pointer={exibe}\r\n                        onClick={exibe ? () => verPapeis() : \"\"}\r\n                        // onClick={exibe ? () => notifyMe() : \"\"}\r\n                        \r\n                        id=\"myBtn\" >\r\n\r\n                        {exibe.length}\r\n\r\n                    </Btnfixed>\r\n                </Divanim>\r\n                : \"\"\r\n        }\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Pvgalert\r\n\r\n\r\nconst Divanim = styled.div`\r\n         .animated {\r\n            -webkit-animation-duration: 2s;\r\n            animation-duration: 2s;\r\n            -webkit-animation-fill-mode: both;\r\n            animation-fill-mode: both;\r\n            -webkit-animation-name: fadeIn;\r\n            animation-name: fadeIn;\r\n            border: none !important;\r\n         }\r\n         \r\n         @-webkit-keyframes fadeIn {\r\n            0% {opacity: 0;}\r\n            100% {opacity: 1;}\r\n         }\r\n         \r\n         @keyframes fadeIn {\r\n            0% {opacity: 0;}\r\n            100% {opacity: 1;}\r\n        }\r\n\r\n        .animatedOut {\r\n            -webkit-animation-duration: 2s;\r\n            animation-duration: 2s;\r\n            -webkit-animation-fill-mode: both;\r\n            animation-fill-mode: both;\r\n            -webkit-animation-name: fadeOut;\r\n            animation-name: fadeOut;\r\n            border: none !important;            \r\n         }\r\n         \r\n         @-webkit-keyframes fadeOut {\r\n\r\n            0% {opacity: 1;}\r\n            100% {opacity: 0;}\r\n         }\r\n         \r\n         @keyframes fadeOut {\r\n            0% {opacity: 1;}\r\n            100% {opacity: 0;}\r\n         }\r\n        `\r\n\r\nconst Btnfixed = styled.button`\r\nwidth: 50px;\r\nheight: 50px;\r\n\r\ndisplay:${props => props.exibe ? `block` : `none`};\r\n    position: fixed; /* Fixed/sticky position */\r\n    top: 9px; /* Place the button at the bottom of the page */\r\n    left: 30px; /* Place the button 30px from the right */\r\n    z-index: 99; /* Make sure it does not overlap */\r\n    border: none !important; /* Remove borders */\r\n    outline: none; /* Remove outline */\r\n    background-color: rgb(200, 10, 10, 0.91)!important; /* rgb(20, 26, 40, 0.91); Set a background color */\r\n    color: black; /* Text color */\r\n    cursor: ${props => props.pointer ? `pointer` : `auto`} !important ; /* Add a mouse pointer on hover */\r\n    padding: 15px; /* Some padding */\r\n    border-radius: 50%; /* Rounded corners */\r\n    font-size: 18px; /* Increase font size */\r\n    transition-timing-function: ease;\r\n    transition: background-color 2s;\r\n    animation: animation2 5s infinite;\r\n    color: white;\r\n    :hover {\r\n        border: none !important;\r\n        background-color: #fac564 !important; \r\n        opacity:0.4\r\n    }\r\n\r\n    .circle1{\r\n    top:-8%;\r\n    right: -20%;\r\n    background: linear-gradient(rgb(0,255,179),  rgb(0,255, 79));\r\n    animation: animation2 5s infinite;\r\n}\r\n\r\n    @keyframes animation2 {\r\n  0%   {background: linear-gradient(rgb(0,255,179),  rgb(0,255, 79))}\r\n  50%  {background: linear-gradient(rgb(0,255,179),  rgb(0,255, 79))}\r\n  100% {background: linear-gradient(rgb(0,255,179),  rgb(0,255, 79))}\r\n}\r\n\r\n\r\n`\r\n","C:\\Users\\tomaz\\personal\\src\\util\\localsthandler.js",[],"C:\\Users\\tomaz\\react-project\\src\\index.js",[],"C:\\Users\\tomaz\\react-project\\src\\reportWebVitals.js",[],"C:\\Users\\tomaz\\react-project\\src\\App.js",[],"C:\\Users\\tomaz\\react-project\\src\\assets\\styles\\globalStyles.js",["322"],"C:\\Users\\tomaz\\react-project\\src\\components\\dog.js",[],"C:\\Users\\tomaz\\react-project\\src\\components\\home.js",[],"C:\\Users\\tomaz\\react-project\\src\\components\\glass.js",[],"C:\\Users\\tomaz\\react-project\\src\\components\\tenis.js",["323"],"C:\\Users\\tomaz\\react-project\\src\\components\\excelrender.js",[],"C:\\Users\\tomaz\\react-project\\src\\components\\smooth.js",[],"C:\\Users\\tomaz\\react-project\\src\\components\\movingbg.js",[],"C:\\Users\\tomaz\\react-project\\src\\components\\navbars.js",["324","325"],"C:\\Users\\tomaz\\react-project\\src\\components\\menuAnimado.js",["326","327","328"],"C:\\Users\\tomaz\\react-project\\src\\components\\paralax.js",[],"C:\\Users\\tomaz\\react-project\\src\\config\\history.js",[],"C:\\Users\\tomaz\\react-project\\src\\util\\dadosUteis.js",[],"C:\\Users\\tomaz\\react-project\\src\\util\\localsthandler.js",[],"C:\\Users\\tomaz\\react-project\\src\\util\\savelocalCalc.js",[],"C:\\Users\\tomaz\\react-project\\src\\components\\layout\\layout.js",[],"C:\\Users\\tomaz\\react-project\\src\\components\\topButton.js",["329"],"C:\\Users\\tomaz\\react-project\\src\\util\\objeto.js",[],"C:\\Users\\tomaz\\react-project\\src\\components\\banneritems.js",["330","331"],"C:\\Users\\tomaz\\react-project\\src\\components\\linksgroup.js",["332"],"C:\\Users\\tomaz\\react-project\\src\\services\\trader.js",[],"C:\\Users\\tomaz\\react-project\\src\\components\\formcontact.js",[],"C:\\Users\\tomaz\\react-project\\src\\util\\functioncallput.js",[],"C:\\Users\\tomaz\\react-project\\src\\util\\index.js",[],"C:\\Users\\tomaz\\react-project\\src\\config\\http.js",["333"],{"ruleId":"334","replacedBy":"335"},{"ruleId":"336","replacedBy":"337"},{"ruleId":"338","severity":1,"message":"339","line":3,"column":8,"nodeType":"340","messageId":"341","endLine":3,"endColumn":11},{"ruleId":"338","severity":1,"message":"342","line":2,"column":10,"nodeType":"340","messageId":"341","endLine":2,"endColumn":16},{"ruleId":"338","severity":1,"message":"343","line":2,"column":28,"nodeType":"340","messageId":"341","endLine":2,"endColumn":31},{"ruleId":"338","severity":1,"message":"344","line":2,"column":33,"nodeType":"340","messageId":"341","endLine":2,"endColumn":36},{"ruleId":"338","severity":1,"message":"345","line":19,"column":14,"nodeType":"340","messageId":"341","endLine":19,"endColumn":21},{"ruleId":"338","severity":1,"message":"346","line":2,"column":17,"nodeType":"340","messageId":"341","endLine":2,"endColumn":26},{"ruleId":"347","severity":1,"message":"348","line":38,"column":41,"nodeType":"349","endLine":44,"endColumn":61},{"ruleId":"350","severity":1,"message":"351","line":49,"column":46,"nodeType":"352","messageId":"353","endLine":49,"endColumn":48},{"ruleId":"354","severity":1,"message":"355","line":160,"column":12,"nodeType":"356","endLine":160,"endColumn":14,"suggestions":"357"},{"ruleId":"338","severity":1,"message":"358","line":227,"column":11,"nodeType":"340","messageId":"341","endLine":227,"endColumn":23},{"ruleId":"350","severity":1,"message":"351","line":543,"column":23,"nodeType":"352","messageId":"353","endLine":543,"endColumn":25},{"ruleId":"338","severity":1,"message":"359","line":3,"column":8,"nodeType":"340","messageId":"341","endLine":3,"endColumn":15},{"ruleId":"338","severity":1,"message":"344","line":2,"column":10,"nodeType":"340","messageId":"341","endLine":2,"endColumn":13},{"ruleId":"338","severity":1,"message":"360","line":2,"column":15,"nodeType":"340","messageId":"341","endLine":2,"endColumn":21},{"ruleId":"338","severity":1,"message":"361","line":2,"column":54,"nodeType":"340","messageId":"341","endLine":2,"endColumn":68},{"ruleId":"338","severity":1,"message":"362","line":4,"column":10,"nodeType":"340","messageId":"341","endLine":4,"endColumn":26},{"ruleId":"338","severity":1,"message":"363","line":8,"column":8,"nodeType":"340","messageId":"341","endLine":8,"endColumn":17},{"ruleId":"338","severity":1,"message":"364","line":11,"column":8,"nodeType":"340","messageId":"341","endLine":11,"endColumn":13},{"ruleId":"350","severity":1,"message":"351","line":69,"column":62,"nodeType":"352","messageId":"353","endLine":69,"endColumn":64},{"ruleId":"338","severity":1,"message":"365","line":82,"column":14,"nodeType":"340","messageId":"341","endLine":82,"endColumn":25},{"ruleId":"366","severity":1,"message":"367","line":111,"column":35,"nodeType":"368","messageId":"369","endLine":111,"endColumn":37},{"ruleId":"354","severity":1,"message":"370","line":186,"column":12,"nodeType":"356","endLine":186,"endColumn":25,"suggestions":"371"},{"ruleId":"354","severity":1,"message":"372","line":197,"column":12,"nodeType":"356","endLine":197,"endColumn":14,"suggestions":"373"},{"ruleId":"354","severity":1,"message":"372","line":205,"column":8,"nodeType":"356","endLine":205,"endColumn":10,"suggestions":"374"},{"ruleId":"350","severity":1,"message":"351","line":271,"column":55,"nodeType":"352","messageId":"353","endLine":271,"endColumn":57},{"ruleId":"350","severity":1,"message":"351","line":276,"column":60,"nodeType":"352","messageId":"353","endLine":276,"endColumn":62},{"ruleId":"350","severity":1,"message":"351","line":281,"column":55,"nodeType":"352","messageId":"353","endLine":281,"endColumn":57},{"ruleId":"350","severity":1,"message":"351","line":285,"column":60,"nodeType":"352","messageId":"353","endLine":285,"endColumn":62},{"ruleId":"338","severity":1,"message":"344","line":2,"column":10,"nodeType":"340","messageId":"341","endLine":2,"endColumn":13},{"ruleId":"338","severity":1,"message":"360","line":2,"column":15,"nodeType":"340","messageId":"341","endLine":2,"endColumn":21},{"ruleId":"338","severity":1,"message":"375","line":2,"column":54,"nodeType":"340","messageId":"341","endLine":2,"endColumn":58},{"ruleId":"338","severity":1,"message":"376","line":32,"column":12,"nodeType":"340","messageId":"341","endLine":32,"endColumn":17},{"ruleId":"338","severity":1,"message":"377","line":32,"column":19,"nodeType":"340","messageId":"341","endLine":32,"endColumn":27},{"ruleId":"338","severity":1,"message":"378","line":43,"column":15,"nodeType":"340","messageId":"341","endLine":43,"endColumn":25},{"ruleId":"338","severity":1,"message":"379","line":232,"column":15,"nodeType":"340","messageId":"341","endLine":232,"endColumn":28},{"ruleId":"338","severity":1,"message":"380","line":6,"column":7,"nodeType":"340","messageId":"341","endLine":6,"endColumn":15},{"ruleId":"338","severity":1,"message":"342","line":2,"column":10,"nodeType":"340","messageId":"341","endLine":2,"endColumn":16},{"ruleId":"334","replacedBy":"381"},{"ruleId":"336","replacedBy":"382"},{"ruleId":"338","severity":1,"message":"344","line":4,"column":10,"nodeType":"340","messageId":"341","endLine":4,"endColumn":13},{"ruleId":"338","severity":1,"message":"360","line":4,"column":15,"nodeType":"340","messageId":"341","endLine":4,"endColumn":21},{"ruleId":"338","severity":1,"message":"343","line":4,"column":23,"nodeType":"340","messageId":"341","endLine":4,"endColumn":26},{"ruleId":"338","severity":1,"message":"383","line":4,"column":60,"nodeType":"340","messageId":"341","endLine":4,"endColumn":74},{"ruleId":"338","severity":1,"message":"384","line":4,"column":76,"nodeType":"340","messageId":"341","endLine":4,"endColumn":83},{"ruleId":"338","severity":1,"message":"385","line":4,"column":85,"nodeType":"340","messageId":"341","endLine":4,"endColumn":93},{"ruleId":"338","severity":1,"message":"378","line":34,"column":15,"nodeType":"340","messageId":"341","endLine":34,"endColumn":25},{"ruleId":"350","severity":1,"message":"351","line":49,"column":53,"nodeType":"352","messageId":"353","endLine":49,"endColumn":55},{"ruleId":"350","severity":1,"message":"351","line":50,"column":53,"nodeType":"352","messageId":"353","endLine":50,"endColumn":55},{"ruleId":"350","severity":1,"message":"351","line":61,"column":20,"nodeType":"352","messageId":"353","endLine":61,"endColumn":22},{"ruleId":"350","severity":1,"message":"351","line":69,"column":19,"nodeType":"352","messageId":"353","endLine":69,"endColumn":21},{"ruleId":"338","severity":1,"message":"386","line":75,"column":13,"nodeType":"340","messageId":"341","endLine":75,"endColumn":14},{"ruleId":"338","severity":1,"message":"387","line":2,"column":15,"nodeType":"340","messageId":"341","endLine":2,"endColumn":20},{"ruleId":"338","severity":1,"message":"388","line":2,"column":38,"nodeType":"340","messageId":"341","endLine":2,"endColumn":43},{"ruleId":"338","severity":1,"message":"362","line":3,"column":54,"nodeType":"340","messageId":"341","endLine":3,"endColumn":70},{"ruleId":"338","severity":1,"message":"389","line":4,"column":10,"nodeType":"340","messageId":"341","endLine":4,"endColumn":21},{"ruleId":"338","severity":1,"message":"390","line":8,"column":9,"nodeType":"340","messageId":"341","endLine":8,"endColumn":22},{"ruleId":"354","severity":1,"message":"391","line":69,"column":8,"nodeType":"356","endLine":69,"endColumn":17,"suggestions":"392"},{"ruleId":"354","severity":1,"message":"393","line":99,"column":11,"nodeType":"356","endLine":99,"endColumn":13,"suggestions":"394"},{"ruleId":"350","severity":1,"message":"351","line":104,"column":23,"nodeType":"352","messageId":"353","endLine":104,"endColumn":25},{"ruleId":"338","severity":1,"message":"378","line":126,"column":19,"nodeType":"340","messageId":"341","endLine":126,"endColumn":29},{"ruleId":"354","severity":1,"message":"395","line":149,"column":11,"nodeType":"356","endLine":149,"endColumn":21,"suggestions":"396"},{"ruleId":"338","severity":1,"message":"397","line":161,"column":15,"nodeType":"340","messageId":"341","endLine":161,"endColumn":35},{"ruleId":"366","severity":1,"message":"367","line":178,"column":35,"nodeType":"368","messageId":"369","endLine":178,"endColumn":37},{"ruleId":"338","severity":1,"message":"398","line":234,"column":15,"nodeType":"340","messageId":"341","endLine":234,"endColumn":21},{"ruleId":"350","severity":1,"message":"351","line":350,"column":69,"nodeType":"352","messageId":"353","endLine":350,"endColumn":71},{"ruleId":"350","severity":1,"message":"351","line":418,"column":84,"nodeType":"352","messageId":"353","endLine":418,"endColumn":86},{"ruleId":"399","severity":1,"message":"400","line":446,"column":87,"nodeType":"401","endLine":447,"endColumn":49},{"ruleId":"399","severity":1,"message":"400","line":447,"column":73,"nodeType":"401","endLine":448,"endColumn":49},{"ruleId":"399","severity":1,"message":"400","line":448,"column":66,"nodeType":"401","endLine":449,"endColumn":48},{"ruleId":"399","severity":1,"message":"400","line":469,"column":83,"nodeType":"401","endLine":470,"endColumn":46},{"ruleId":"399","severity":1,"message":"400","line":470,"column":70,"nodeType":"401","endLine":471,"endColumn":46},{"ruleId":"399","severity":1,"message":"400","line":471,"column":63,"nodeType":"401","endLine":472,"endColumn":46},{"ruleId":"338","severity":1,"message":"383","line":2,"column":45,"nodeType":"340","messageId":"341","endLine":2,"endColumn":59},{"ruleId":"338","severity":1,"message":"384","line":2,"column":61,"nodeType":"340","messageId":"341","endLine":2,"endColumn":68},{"ruleId":"354","severity":1,"message":"402","line":48,"column":12,"nodeType":"356","endLine":48,"endColumn":58,"suggestions":"403"},{"ruleId":"338","severity":1,"message":"378","line":54,"column":15,"nodeType":"340","messageId":"341","endLine":54,"endColumn":25},{"ruleId":"350","severity":1,"message":"351","line":59,"column":69,"nodeType":"352","messageId":"353","endLine":59,"endColumn":71},{"ruleId":"338","severity":1,"message":"404","line":92,"column":20,"nodeType":"340","messageId":"341","endLine":92,"endColumn":29},{"ruleId":"338","severity":1,"message":"405","line":94,"column":24,"nodeType":"340","messageId":"341","endLine":94,"endColumn":28},{"ruleId":"350","severity":1,"message":"351","line":102,"column":23,"nodeType":"352","messageId":"353","endLine":102,"endColumn":25},{"ruleId":"338","severity":1,"message":"342","line":4,"column":10,"nodeType":"340","messageId":"341","endLine":4,"endColumn":16},{"ruleId":"338","severity":1,"message":"359","line":7,"column":8,"nodeType":"340","messageId":"341","endLine":7,"endColumn":15},{"ruleId":"338","severity":1,"message":"378","line":15,"column":15,"nodeType":"340","messageId":"341","endLine":15,"endColumn":25},{"ruleId":"338","severity":1,"message":"406","line":30,"column":12,"nodeType":"340","messageId":"341","endLine":30,"endColumn":25},{"ruleId":"338","severity":1,"message":"407","line":48,"column":14,"nodeType":"340","messageId":"341","endLine":48,"endColumn":22},{"ruleId":"338","severity":1,"message":"408","line":58,"column":15,"nodeType":"340","messageId":"341","endLine":58,"endColumn":27},{"ruleId":"338","severity":1,"message":"408","line":66,"column":19,"nodeType":"340","messageId":"341","endLine":66,"endColumn":31},{"ruleId":"338","severity":1,"message":"339","line":3,"column":8,"nodeType":"340","messageId":"341","endLine":3,"endColumn":11},{"ruleId":"338","severity":1,"message":"409","line":8,"column":8,"nodeType":"340","messageId":"341","endLine":8,"endColumn":13},{"ruleId":"338","severity":1,"message":"410","line":2,"column":39,"nodeType":"340","messageId":"341","endLine":2,"endColumn":50},{"ruleId":"347","severity":1,"message":"348","line":169,"column":33,"nodeType":"349","endLine":175,"endColumn":52},{"ruleId":"338","severity":1,"message":"411","line":72,"column":14,"nodeType":"340","messageId":"341","endLine":72,"endColumn":24},{"ruleId":"338","severity":1,"message":"412","line":301,"column":14,"nodeType":"340","messageId":"341","endLine":301,"endColumn":17},{"ruleId":"338","severity":1,"message":"413","line":327,"column":15,"nodeType":"340","messageId":"341","endLine":327,"endColumn":16},{"ruleId":"338","severity":1,"message":"342","line":2,"column":10,"nodeType":"340","messageId":"341","endLine":2,"endColumn":16},{"ruleId":"338","severity":1,"message":"346","line":2,"column":17,"nodeType":"340","messageId":"341","endLine":2,"endColumn":26},{"ruleId":"347","severity":1,"message":"348","line":38,"column":41,"nodeType":"349","endLine":44,"endColumn":61},{"ruleId":"338","severity":1,"message":"380","line":6,"column":7,"nodeType":"340","messageId":"341","endLine":6,"endColumn":15},{"ruleId":"338","severity":1,"message":"359","line":3,"column":8,"nodeType":"340","messageId":"341","endLine":3,"endColumn":15},"no-native-reassign",["414"],"no-negated-in-lhs",["415"],"no-unused-vars","'Dog' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'negrito' is defined but never used.","'useEffect' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'PegaTodosRealtime' and 'paper'. Either include them or remove the dependency array.","ArrayExpression",["416"],"'Yahoofinance' is assigned a value but never used.","'history' is defined but never used.","'Navbar' is defined but never used.","'DropdownButton' is defined but never used.","'getRealTimeRadar' is defined but never used.","'Destaques' is defined but never used.","'Listr' is defined but never used.","'ajustaFloat' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'aplicarFiltros'. Either include it or remove the dependency array.",["417"],"React Hook useEffect has a missing dependency: 'carregarTodasOpcoesCalculadas'. Either include it or remove the dependency array.",["418"],["419"],"'Form' is defined but never used.","'count' is assigned a value but never used.","'setCount' is assigned a value but never used.","'getdataOne' is assigned a value but never used.","'defaultFields' is assigned a value but never used.","'defaulte' is assigned a value but never used.",["414"],["415"],"'OverlayTrigger' is defined but never used.","'Tooltip' is defined but never used.","'Carousel' is defined but never used.","'u' is assigned a value but never used.","'Modal' is defined but never used.","'Table' is defined but never used.","'saveToLocal' is defined but never used.","'localStoragem' is defined but never used.","React Hook useEffect has a missing dependency: 'aplicarFiltro'. Either include it or remove the dependency array.",["420"],"React Hook useEffect has a missing dependency: 'getdataOfAtivo'. Either include it or remove the dependency array.",["421"],"React Hook useEffect has a missing dependency: 'opcaoData'. Either include it or remove the dependency array. You can also do a functional update 'setOpcaoData(o => ...)' if you only need 'opcaoData' in the 'setOpcaoData' call.",["422"],"'getdataOneAllOptions' is assigned a value but never used.","'result' is assigned a value but never used.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","React Hook useEffect has a missing dependency: 'carregarUm'. Either include it or remove the dependency array.",["423"],"'setChaves' is assigned a value but never used.","'name' is assigned a value but never used.","'Notifications' is assigned a value but never used.","'notifyMe' is defined but never used.","'notification' is assigned a value but never used.","'Slide' is defined but never used.","'NavDropdown' is defined but never used.","'Navigation' is defined but never used.","'Apx' is defined but never used.","'i' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"424","fix":"425"},{"desc":"426","fix":"427"},{"desc":"428","fix":"429"},{"desc":"428","fix":"430"},{"desc":"431","fix":"432"},{"desc":"433","fix":"434"},{"desc":"435","fix":"436"},{"desc":"437","fix":"438"},"Update the dependencies array to be: [PegaTodosRealtime, paper]",{"range":"439","text":"440"},"Update the dependencies array to be: [aplicarFiltros, multiFilter]",{"range":"441","text":"442"},"Update the dependencies array to be: [carregarTodasOpcoesCalculadas]",{"range":"443","text":"444"},{"range":"445","text":"444"},"Update the dependencies array to be: [aplicarFiltro, filtros]",{"range":"446","text":"447"},"Update the dependencies array to be: [getdataOfAtivo]",{"range":"448","text":"449"},"Update the dependencies array to be: [fullData, opcaoData]",{"range":"450","text":"451"},"Update the dependencies array to be: [fields.oeste, fields.leste, mesmoSetor, flag, carregarUm]",{"range":"452","text":"453"},[5072,5074],"[PegaTodosRealtime, paper]",[5038,5051],"[aplicarFiltros, multiFilter]",[5221,5223],"[carregarTodasOpcoesCalculadas]",[5422,5424],[2058,2067],"[aplicarFiltro, filtros]",[2610,2612],"[getdataOfAtivo]",[3926,3936],"[fullData, opcaoData]",[1295,1341],"[fields.oeste, fields.leste, mesmoSetor, flag, carregarUm]"]